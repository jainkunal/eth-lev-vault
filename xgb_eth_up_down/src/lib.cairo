mod xgb_inference;

fn main(input_vector: Span<i32>) -> i32 {
    let tree_0 = xgb_inference::Tree {
    base_weights: array![15, 8821, -73870, 33536, -14676, 29871, -99002, -45904, 48301, 12720, -55116, -116043, 14087, -77780, 16141, 57433, -21422, 47482, -26297, -30276, -105343, -18747, -150137, -107655, 7599, 49711, -14209, 82321, 33873, -89942, 44780, 13983, 87259, -40899, 35956, 39240, -67215, -149812, 48628, -22475, 31211, -12450, -49829, 2108, -46746, 27648, -8701, 41487, 18559, 1176, 19459, -45569, 9844, 33897, -2730, -3391, 29070, 1981, 39771, -20018, 12503, -11193, 20921, -25992, 17623, -49244, -8701, -8701, 31381, 21870, -8701].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 17, 19, 21, 0, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 0, 45, 0, 47, 49, 51, 53, 55, 57, 59, 0, 61, 63, 65, 67, 0, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 18, 20, 22, 0, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 0, 46, 0, 48, 50, 52, 54, 56, 58, 60, 0, 62, 64, 66, 68, 0, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 2, 8, 9, 7, 0, 4, 5, 6, 0, 6, 6, 0, 1, 9, 4, 4, 4, 3, 8, 5, 0, 5, 3, 0, 2, 0, 0, 0, 3, 2, 6, 9, 7, 0, 9, 6, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![100871, 695, -189557, -116402, 12459, 29871, 185291, 24254, 76535, 38547, 48925, -43192, 14087, 38129, -126856, -41733, -89244, 46602, 126962, 30836, 26635, 111601, -44449, -44311, 7599, -59007, -14209, -144877, 36138, 46073, -103264, 69991, -104580, -22618, 35956, -83887, 35728, 137658, -40938, -22475, 19633, -12450, -49829, 2108, -46746, 27648, -8701, 41487, 18559, 1176, 19459, -45569, 9844, 33897, -2730, -3391, 29070, 1981, 39771, -20018, 12503, -11193, 20921, -25992, 17623, -49244, -8701, -8701, 31381, 21870, -8701].span()
};
    let tree_1 = xgb_inference::Tree {
    base_weights: array![538, 8285, -47887, -14938, 25674, 24438, -62016, -25188, 93971, 55111, 1580, 3037, -92645, 36755, -46148, 36336, 38902, 90612, 21576, 79781, -24626, -33262, 34243, -130195, -7619, -24789, 63527, -33222, -38896, 22621, -8231, 18320, 118696, 57938, -32507, 93383, -10469, -39157, 34624, 54944, -85806, -7216, -41988, 61702, -28939, 20665, -31429, -14501, 24729, 26847, -12395, 20133, -35470, 12348, 46179, 21864, -13813, -39178, 8910, 4394, 32495, -5672, -30838, -8609, 21350, 20224, 5305, -35808, 3693, 30329, -5684].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 0, 31, 33, 35, 37, 39, 0, 41, 43, 45, 47, 49, 0, 0, 0, 51, 53, 55, 57, 59, 0, 61, 63, 65, 67, 0, 0, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 0, 32, 34, 36, 38, 40, 0, 42, 44, 46, 48, 50, 0, 0, 0, 52, 54, 56, 58, 60, 0, 62, 64, 66, 68, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 5, 8, 3, 4, 0, 5, 3, 1, 8, 7, 1, 9, 3, 6, 4, 0, 3, 2, 5, 4, 0, 0, 2, 1, 4, 6, 0, 0, 0, 0, 3, 4, 3, 5, 9, 0, 6, 0, 5, 7, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![98160, -18896, -189557, 202577, 25260, 24438, -24907, -66297, -13024, 5640, -47127, 199708, 110336, -98646, 123878, -183504, 38902, -68238, 695, 269514, 96006, 103598, 34243, -104440, 180915, -33558, -99959, -173358, -38896, 22621, -8231, -77353, -98197, 95651, 28834, -126856, -10469, 47628, 28221, -144770, 43473, -7216, -41988, -2219, -28939, 20665, -31429, -14501, 24729, 26847, -12395, 20133, -35470, 12348, 46179, 21864, -13813, -39178, 8910, 4394, 32495, -5672, -30838, -8609, 21350, 20224, 5305, -35808, 3693, 30329, -5684].span()
};
    let tree_2 = xgb_inference::Tree {
    base_weights: array![775, 51983, -4541, -49938, 80094, 8609, -22862, -29664, 14612, 12303, 97094, 44599, -53, 5319, -47977, 28647, -19890, 114648, -1532, 19270, 80012, 17888, -40142, 37172, -38279, -67394, 61374, 40209, 40371, 24441, -11253, 19460, 117931, -9418, 42395, -63174, 50103, 55355, -37888, -39822, -3236, 10099, -72873, 107112, -9028, 28293, -11092, -26401, 13129, 22127, -16012, 40694, 9291, -20737, 4992, 20192, -138, -11649, -41164, -6789, 39140, 23056, -1470, 10319, -28353, 14195, -20527, -32170, -14731, 38444, 7429].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 0, 0, 15, 17, 19, 21, 23, 25, 0, 0, 27, 0, 29, 31, 33, 35, 37, 39, 41, 43, 45, 0, 0, 47, 49, 51, 53, 55, 57, 59, 61, 63, 0, 65, 0, 67, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 0, 0, 16, 18, 20, 22, 24, 26, 0, 0, 28, 0, 30, 32, 34, 36, 38, 40, 42, 44, 46, 0, 0, 48, 50, 52, 54, 56, 58, 60, 62, 64, 0, 66, 0, 68, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 9, 0, 4, 8, 2, 6, 0, 0, 7, 8, 2, 7, 4, 3, 0, 0, 3, 0, 0, 8, 5, 5, 0, 1, 5, 8, 9, 0, 0, 1, 4, 9, 2, 9, 5, 0, 8, 9, 0, 3, 0, 5, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-137788, -121602, 42817, 124563, -118591, -59007, -2219, -29664, 14612, -169251, 167952, -84140, 41306, 37267, 85867, 28647, -19890, -18627, -1532, -164477, -22423, -13876, 139084, 103598, 4328, -130168, 64410, 76254, 40371, 24441, -4366, 22104, -17068, -10093, -25429, 63766, -64512, 104873, 133358, -39822, -40938, 10099, -20950, 90932, -9028, 28293, -11092, -26401, 13129, 22127, -16012, 40694, 9291, -20737, 4992, 20192, -138, -11649, -41164, -6789, 39140, 23056, -1470, 10319, -28353, 14195, -20527, -32170, -14731, 38444, 7429].span()
};
    let tree_3 = xgb_inference::Tree {
    base_weights: array![994, 42233, -3130, -40014, 65328, -75994, -152, -24486, 12458, 11018, 84727, 14014, -114365, 76605, -2736, -28989, 23370, 102852, -1242, -3973, -41274, 34268, 3027, 10313, -17233, 5833, -21617, 37644, 29559, -2033, 47467, -22242, 84237, -11078, 24801, 5045, -14296, 20739, -24601, -2475, -26385, 465, 36109].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 0, 0, 15, 17, 0, 19, 21, 23, 25, 0, 27, 0, 0, 0, 0, 0, 29, 31, 0, 0, 0, 33, 35, 37, 39, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 0, 0, 16, 18, 0, 20, 22, 24, 26, 0, 28, 0, 0, 0, 0, 0, 30, 32, 0, 0, 0, 34, 36, 38, 40, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 9, 2, 4, 7, 6, 4, 0, 0, 0, 8, 0, 8, 9, 3, 5, 0, 9, 0, 0, 0, 0, 0, 3, 7, 0, 0, 0, 3, 3, 0, 8, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-137788, -121602, -116010, 124563, -42669, 1570, -181552, -24486, 12458, 93989, 167952, 14014, -101942, 126237, -39733, 2290, 23370, 113946, -1242, -3973, -41274, 34268, 3027, -51056, 171102, 5833, -21617, 37644, -17526, -65854, 76878, 67039, -80248, -11078, 24801, 5045, -14296, 20739, -24601, -2475, -26385, 465, 36109].span()
};
    let tree_4 = xgb_inference::Tree {
    base_weights: array![1041, -31490, 2537, 6856, -35375, 64154, 4098, 21397, -52023, 88569, -9572, -13983, 16965, -67564, 32320, 3460, 101310, 6284, -47930, 57961, 6078, -9951, -84871, 29835, -14744, 8632, 33555, -2835, 21636, 5627, -19452, 12011, 38365, 8954, -3680, -20157, 20357, -34629, -4800].span(),
    left_children: array![1, 0, 3, 5, 7, 9, 11, 0, 13, 15, 0, 17, 19, 21, 23, 0, 25, 27, 29, 31, 33, 35, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 0, 4, 6, 8, 10, 12, 0, 14, 16, 0, 18, 20, 22, 24, 0, 26, 28, 30, 32, 34, 36, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 0, 0, 4, 8, 5, 5, 0, 1, 3, 0, 9, 7, 6, 5, 0, 6, 9, 4, 1, 4, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-164476, -31490, 100871, -181552, -189557, -12479, -18896, 21397, 204094, 66455, -9572, 33692, -55300, -57139, -27607, 3460, -125553, -9520, -147364, 102294, 25260, -101681, 46073, 29835, -14744, 8632, 33555, -2835, 21636, 5627, -19452, 12011, 38365, 8954, -3680, -20157, 20357, -34629, -4800].span()
};
    let tree_5 = xgb_inference::Tree {
    base_weights: array![1098, 27155, -421, 1367, -86954, 15789, -8114, -34105, -3469, 57137, 3784, -44046, 743, 90958, -5290, -30006, 21066, 21458, -54582, 15227, -25764, 33310, 2988, 12319, -23618, -16340, 17871, -8662, 10754, 5755, -21728, 14881, -1533, -26422, -3274].span(),
    left_children: array![1, 0, 3, 5, 7, 9, 11, 0, 0, 13, 15, 17, 19, 21, 23, 25, 27, 0, 29, 31, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 0, 4, 6, 8, 10, 12, 0, 0, 14, 16, 18, 20, 22, 24, 26, 28, 0, 30, 32, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 2, 1, 1, 9, 9, 0, 0, 7, 0, 5, 9, 2, 0, 3, 5, 0, 4, 4, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-175097, 27155, 195389, -15361, -16655, -63197, -116911, -34105, -3469, 50015, -166730, -81218, 68160, 83007, 32233, -16355, -79849, 21458, 51276, 8068, 90980, 33310, 2988, 12319, -23618, -16340, 17871, -8662, 10754, 5755, -21728, 14881, -1533, -26422, -3274].span()
};
    let tree_6 = xgb_inference::Tree {
    base_weights: array![892, -804, 63270, 5516, -22931, -2804, 31556, 76924, 2370, -5098, -71745, 4410, 30018, 10170, -21957, -28731, 31385, -89505, 11102, 14529, -49449, 10430, -73937, -11700, -35720, -21409, 72777, -109600, -1795, 1624, 14150, -25865, 3179, -9231, 14861, 7336, -35593, 27844, -9136, 10427, -27030, 28787, 4999, -37896, -2522].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 13, 15, 17, 0, 0, 19, 21, 23, 25, 27, 0, 29, 31, 33, 35, 37, 0, 39, 41, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 14, 16, 18, 0, 0, 20, 22, 24, 26, 28, 0, 30, 32, 34, 36, 38, 0, 40, 42, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![8, 8, 9, 0, 9, 0, 0, 6, 6, 7, 3, 0, 0, 1, 7, 7, 5, 0, 0, 6, 8, 6, 2, 5, 0, 7, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![205761, 70952, 79893, -173625, 105262, -2804, 31556, -20101, 58766, 122320, 240133, 4410, 30018, 166192, -4396, 105431, 17031, 91538, 11102, 29442, -1322, 91915, -31499, -70803, -35720, 180740, 65850, 93529, -1795, 1624, 14150, -25865, 3179, -9231, 14861, 7336, -35593, 27844, -9136, 10427, -27030, 28787, 4999, -37896, -2522].span()
};
    let tree_7 = xgb_inference::Tree {
    base_weights: array![585, -25536, 1748, -1250, 44824, 1875, -44215, 11747, 33910, 4578, -48606, 30765, -79967, 41519, -59191, 37314, 636, 2528, -26255, -15200, 27289, -33295, 14454, -12513, 75244, -22581, -4001, 15228, -21228, -25213, 1515, -15100, 25764, 31438, -1219].span(),
    left_children: array![1, 0, 3, 5, 7, 9, 11, 13, 0, 15, 17, 19, 21, 23, 25, 27, 29, 31, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 0, 4, 6, 8, 10, 12, 14, 0, 16, 18, 20, 22, 24, 26, 28, 30, 32, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 0, 4, 6, 6, 1, 8, 0, 0, 8, 4, 6, 7, 3, 1, 2, 8, 4, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-164476, -25536, 138213, 123878, 74190, 166192, -45086, 98160, 33910, -143067, 108, 150139, 74742, 18600, 173200, 171482, -112397, -89244, -26255, -15200, 27289, -33295, 14454, -12513, 19949, -22581, -4001, 15228, -21228, -25213, 1515, -15100, 25764, 31438, -1219].span()
};
    let tree_8 = xgb_inference::Tree {
    base_weights: array![105, -22736, 1273, -14187, 7041, -1258, -72587, 54760, 2229, 59692, -11909, 17137, -113114, 69708, -7217, 13145, -10755, -2367, 83766, -20769, 72699, 23895, -14235, -11113, -41140, 96747, 7164, -689, 53942, 8272, -46836, 3242, 31475, -10854, 8799, 26133, 6004, 3200, 37582, -16487, 15313, -4886, 13348, 22734, -9589, 8616, -10740, -20716, 9552].span(),
    left_children: array![1, 0, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 0, 27, 29, 0, 31, 33, 35, 0, 0, 0, 0, 37, 39, 41, 43, 45, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 0, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 0, 28, 30, 0, 32, 34, 36, 0, 0, 0, 0, 38, 40, 42, 44, 46, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![5, 0, 9, 9, 9, 0, 8, 5, 8, 6, 7, 0, 1, 2, 0, 8, 2, 0, 9, 9, 4, 0, 0, 0, 0, 2, 2, 2, 0, 6, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-272804, -22736, -84483, -99293, -59378, -11073, -28376, 119022, 15968, -15561, 154336, 38397, -15030, 34651, -7217, -18657, 44416, -2367, -136101, -112944, 53948, 23895, -14235, -11113, -41140, -95728, 73038, 83854, 96931, 16555, 115226, 3242, 31475, -10854, 8799, 26133, 6004, 3200, 37582, -16487, 15313, -4886, 13348, 22734, -9589, 8616, -10740, -20716, 9552].span()
};
    let tree_9 = xgb_inference::Tree {
    base_weights: array![369, 22204, -794, 489, -59567, -22267, 1487, -4043, -26216, -792, 34868, 35776, -2914, 6567, 28897, 22772, -415, -12693, -93, 9628, -16594].span(),
    left_children: array![1, 0, 3, 5, 7, 0, 9, 0, 0, 11, 13, 15, 17, 19, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 0, 4, 6, 8, 0, 10, 0, 0, 12, 14, 16, 18, 20, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 2, 9, 8, 0, 4, 0, 0, 2, 6, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-175097, 22204, 195389, -164476, -1322, -22267, 138213, -4043, -26216, -164039, 74190, 15477, -116010, 98160, 28897, 22772, -415, -12693, -93, 9628, -16594].span()
};
    let tree_10 = xgb_inference::Tree {
    base_weights: array![305, -19020, 1284, 43376, -253, -10256, 91645, -83078, 2868, 8834, 31263, 3633, -125830, 5296, -72889, -11103, -45128, 2035, 36710, -32072, -1678, 1610, -11510, 18674, -22195].span(),
    left_children: array![1, 0, 3, 5, 7, 0, 9, 11, 13, 0, 0, 0, 15, 17, 19, 0, 0, 21, 23, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 0, 4, 6, 8, 0, 10, 12, 14, 0, 0, 0, 16, 18, 20, 0, 0, 22, 24, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![5, 0, 6, 6, 6, 0, 6, 9, 5, 0, 0, 0, 6, 5, 2, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-272804, -19020, -221087, -303655, -163778, -10256, -257862, -44751, 211168, 8834, 31263, 3633, -191611, 92876, 50405, -11103, -45128, 61264, 60706, -32072, -1678, 1610, -11510, 18674, -22195].span()
};
    let tree_11 = xgb_inference::Tree {
    base_weights: array![-293, 25482, -2762, -59524, 51422, -40556, 1528, -31755, 6148, 16903, 87103, -18724, -30443, -65339, 4077, 65075, -44471, 7734, 30802, -31567, 17292, 13765, -114074, 50571, -275, -2141, 28880, 12316, -27296, -77182, -3074, -41525, -8474, 98936, -62101, -55330, 3073, -30790, -99, -14591, 13559, -10475, 37226, 824, -30544, -24950, 14756, -1386, 12569].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 0, 0, 15, 17, 19, 0, 21, 23, 25, 27, 0, 0, 29, 0, 0, 31, 33, 35, 0, 0, 0, 0, 37, 39, 0, 0, 41, 43, 45, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 0, 0, 16, 18, 20, 0, 22, 24, 26, 28, 0, 0, 30, 0, 0, 32, 34, 36, 0, 0, 0, 0, 38, 40, 0, 0, 42, 44, 46, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 5, 6, 7, 8, 2, 3, 0, 0, 7, 3, 2, 0, 5, 3, 6, 0, 0, 0, 3, 0, 0, 7, 5, 3, 0, 0, 0, 0, 4, 9, 0, 0, 4, 0, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-96655, -40437, -110870, -29246, 18016, 57823, -89890, -31755, 6148, -30166, -114291, 45410, -30443, -15155, -75547, -172153, -147621, 7734, 30802, -73222, 17292, 13765, 42157, 55509, -70295, -2141, 28880, 12316, -27296, 42200, -6302, -41525, -8474, -49057, 35262, 50575, 54651, -30790, -99, -14591, 13559, -10475, 37226, 824, -30544, -24950, 14756, -1386, 12569].span()
};
    let tree_12 = xgb_inference::Tree {
    base_weights: array![-453, 18518, -1375, -57, -47487, -20189, 817, 3357, -28065, -2965, 17893, -37259, 1590, 80849, 6273, 1857, -31467, 21033, -643, 29529, 6773, -7575, 14762].span(),
    left_children: array![1, 0, 3, 5, 7, 0, 9, 0, 0, 11, 13, 15, 17, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 0, 4, 6, 8, 0, 10, 0, 0, 12, 14, 16, 18, 20, 22, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 9, 9, 2, 0, 3, 0, 0, 4, 0, 6, 4, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-175097, 18518, 175348, -164476, 37918, -20189, 74821, 3357, -28065, -80483, -14140, 49366, -56421, -5511, 56581, 1857, -31467, 21033, -643, 29529, 6773, -7575, 14762].span()
};
    let tree_13 = xgb_inference::Tree {
    base_weights: array![-279, -1207, 19563, 3875, -15174, -1683, 59976, 72128, -22323, 3088, -40013, 89914, -20490, 26217, 5179, -57086, -4086, -29112, 9164, -72802, 29912, 117641, -10576, 30823, -80433, -66289, 15849, -13716, 18447, -675, 12379, 7306, -26808, -15417, 31013, 10821, 37604, 28361, -14027, -2159, -30877, -1613, -33970, -12978, 16910].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 13, 15, 17, 19, 21, 0, 0, 0, 23, 25, 27, 29, 31, 33, 35, 0, 37, 39, 41, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 14, 16, 18, 20, 22, 0, 0, 0, 24, 26, 28, 30, 32, 34, 36, 0, 38, 40, 42, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 7, 0, 7, 3, 7, 6, 6, 3, 0, 5, 9, 0, 0, 0, 5, 7, 3, 7, 0, 6, 9, 0, 1, 6, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![217019, 54148, 19563, 35366, -94055, 14560, 72200, -23564, -51056, -163359, 45506, 105262, -20490, 26217, 5179, -27102, 79513, 52444, -19330, -172621, 13554, -114322, -10576, 17363, -81192, -9558, -20200, -13716, 18447, -675, 12379, 7306, -26808, -15417, 31013, 10821, 37604, 28361, -14027, -2159, -30877, -1613, -33970, -12978, 16910].span()
};
    let tree_14 = xgb_inference::Tree {
    base_weights: array![24, 22259, -2625, 34965, -23919, -68533, -1113, 45383, -16161, -30046, -170, -17924, 5040, 69581, -5184, -5577, -71087, 1612, 45973, 82320, 1506, -54352, 17262, 34012, -20655, 5421, -90747, 15032, -12503, 34091, -11620, 28937, 11326, -26266, 502, 16917, -14097, 3421, -14895, 1417, -34709, -18796, 6899, -2280, -26377, 15719, -13478].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 0, 0, 0, 15, 17, 19, 21, 23, 25, 27, 29, 31, 0, 33, 0, 35, 37, 0, 39, 41, 43, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 0, 0, 0, 16, 18, 20, 22, 24, 26, 28, 30, 32, 0, 34, 0, 36, 38, 0, 40, 42, 44, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![8, 1, 7, 2, 0, 4, 9, 4, 0, 0, 0, 9, 4, 9, 6, 5, 4, 8, 1, 7, 0, 5, 0, 4, 1, 0, 1, 5, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-143067, 160207, -176138, 171482, -23919, 951, -84483, 58151, -16161, -30046, -170, -99293, 87532, 69431, -15561, -30802, -11431, 15968, 26790, -120993, 1506, -8287, 17262, 89306, 10142, 5421, -7633, -134448, 164194, 34091, -78933, 28937, 11326, -26266, 502, 16917, -14097, 3421, -14895, 1417, -34709, -18796, 6899, -2280, -26377, 15719, -13478].span()
};
    let tree_15 = xgb_inference::Tree {
    base_weights: array![-457, -1771, 47446, 64, -36921, -3479, 25772, -1908, 48212, 5538, -29911, 2194, -23976, -12676, 27285, -45541, 55434, 55815, 8, -34682, 17602, 15045, -19366, -23867, 1240, 22597, 3786, -1032, 24677, -13315, 1023, -13244, 14629].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 13, 15, 0, 17, 19, 21, 0, 23, 25, 27, 29, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 14, 16, 0, 18, 20, 22, 0, 24, 26, 28, 30, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![8, 8, 9, 8, 0, 0, 0, 8, 1, 5, 0, 0, 3, 0, 0, 3, 4, 6, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![205761, 162688, 79893, 144800, 88421, -3479, 25772, 70952, -11857, -55269, -29911, -173625, 140191, -14140, 27285, 162926, 34698, -20101, -140938, 112750, 17602, 15045, -19366, -23867, 1240, 22597, 3786, -1032, 24677, -13315, 1023, -13244, 14629].span()
};
    let tree_16 = xgb_inference::Tree {
    base_weights: array![19, 32567, -1458, -6197, 57481, -94310, 1251, 27690, 5929, -6962, -37147, 3122, -59082, 9408, -6629, 1699, 60343, -25022, 3097, 11093, -7052, 22975, 3196, 1788, 21015, -9507, 1210].span(),
    left_children: array![1, 3, 5, 0, 7, 9, 11, 0, 13, 0, 0, 15, 17, 0, 0, 19, 21, 0, 0, 23, 25, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 8, 10, 12, 0, 14, 0, 0, 16, 18, 0, 0, 20, 22, 0, 0, 24, 26, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 6, 6, 0, 3, 9, 5, 0, 0, 0, 0, 3, 1, 0, 0, 3, 2, 0, 0, 4, 3, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-199574, -303655, -172153, -6197, -77353, -14501, 211168, 27690, 74297, -6962, -37147, 259315, 135076, 9408, -6629, -38413, -91897, -25022, 3097, 93903, -16355, 22975, 3196, 1788, 21015, -9507, 1210].span()
};
    let tree_17 = xgb_inference::Tree {
    base_weights: array![33, -1069, 42141, 858, -25811, -5756, 20634, -1655, 31044, 21, -69451, -13390, 6218, 72021, -8378, 44032, -34972, -1126, -27795, -346, -44590, 70115, -1862, 28224, -3075, -38070, 12781, 22365, -2778, -20685, 3480, 9109, -6287, -20075, 12680, 28445, -12671, 1001, -21197, -22521, -572].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 0, 0, 31, 33, 35, 37, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 0, 0, 32, 34, 36, 38, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![8, 0, 3, 1, 9, 0, 0, 6, 1, 5, 7, 6, 6, 8, 3, 4, 5, 0, 0, 9, 0, 8, 1, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![205761, 103598, -60830, 122680, 133358, -5756, 20634, -10880, 164527, -25682, -71043, -38265, -1037, 129341, 59117, 48520, 38893, -1126, -27795, -14501, 57993, 76714, 94158, 28224, -3075, -89244, 12781, 22365, -2778, -20685, 3480, 9109, -6287, -20075, 12680, 28445, -12671, 1001, -21197, -22521, -572].span()
};
    let tree_18 = xgb_inference::Tree {
    base_weights: array![49, 29458, -1564, 55015, -13768, 3621, -15384, 26302, 1467, -88, 66630, -27159, 60261, 11172, -11198, -10989, 9036, 82919, -2057, -13739, -64436, 526, 77910, 9214, -46104, 55323, -893, 30383, 4033, -31708, 24581, -76305, 4000, 8019, 28331, 7572, -8852, -17893, 11727, -1476, 27869, 15083, -2748, 10870, -12112, 17240, -4103, -27378, 2551].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 0, 13, 15, 17, 19, 21, 0, 0, 23, 25, 27, 0, 29, 31, 0, 33, 35, 37, 39, 41, 0, 0, 43, 45, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 0, 14, 16, 18, 20, 22, 0, 0, 24, 26, 28, 0, 30, 32, 0, 34, 36, 38, 40, 42, 0, 0, 44, 46, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 5, 3, 9, 0, 3, 6, 0, 8, 8, 4, 6, 4, 0, 0, 8, 8, 7, 0, 6, 9, 0, 5, 4, 1, 9, 3, 0, 0, 8, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-180283, -12479, 6947, 131589, -13768, -6797, 88435, 26302, 144225, -22153, 53528, 46747, -126588, 11172, -11198, -41761, -3621, 50015, -2057, 9459, 124852, 526, -28493, 58151, 61741, -45981, -96655, 30383, 4033, -148540, 3511, 175044, 4000, 8019, 28331, 7572, -8852, -17893, 11727, -1476, 27869, 15083, -2748, 10870, -12112, 17240, -4103, -27378, 2551].span()
};
    let tree_19 = xgb_inference::Tree {
    base_weights: array![841, 2811, -23424, -1198, 18062, -40409, 16897, 3767, -56016, 77305, 4745, 9876, -57068, 15694, -10978, 9279, -21308, 1418, -85145, 3297, 28457, -14146, 57114, -71942, 3373, 1584, 39586, 6015, -82801, -12531, 17207, -35037, 903, -50855, 16128, 24933, -171, 3327, -27889, 10352, -1873, 4300, 24966, 21794, -4631, -30216, -4628, -26229, 4695, 11292, -8931, -7096, 7434].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 0, 23, 0, 0, 25, 27, 29, 31, 0, 0, 33, 35, 37, 0, 39, 41, 43, 45, 0, 0, 0, 0, 47, 49, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 0, 24, 0, 0, 26, 28, 30, 32, 0, 0, 34, 36, 38, 0, 40, 42, 44, 46, 0, 0, 0, 0, 48, 50, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 1, 7, 1, 0, 8, 7, 0, 4, 5, 9, 0, 1, 0, 0, 0, 4, 4, 6, 0, 0, 2, 1, 7, 0, 8, 9, 6, 1, 0, 0, 0, 0, 1, 5, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![102918, 40342, 37791, 31182, 61295, -189557, 59472, 44375, 29388, -61562, 96072, 9876, 197714, 15694, -10978, 35785, 37267, -19190, 68808, 3297, 28457, -8205, 126797, -147414, 3373, -77525, -39405, -93280, 6457, -12531, 17207, -35037, 903, 127795, 39567, 24933, -41551, 3327, -27889, 10352, -1873, 4300, 24966, 21794, -4631, -30216, -4628, -26229, 4695, 11292, -8931, -7096, 7434].span()
};
    let tree_20 = xgb_inference::Tree {
    base_weights: array![730, 27240, -852, -11112, 43134, -30941, 1218, 57189, -3874, 15312, -58499, 46976, -190, 23823, 15905, 12381, -8070, -76070, 4183, 565, 20138, 6334, -12496, -9278, 16935, -2323, -31580, -68, 41542, -22737, 45455, 15523, -1476, 17821, -16921, 4127, -11203, 27812, -6622].span(),
    left_children: array![1, 3, 5, 0, 7, 9, 11, 13, 0, 15, 17, 19, 21, 0, 23, 0, 0, 25, 0, 0, 0, 27, 29, 0, 0, 0, 0, 31, 33, 35, 37, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 8, 10, 12, 14, 0, 16, 18, 20, 22, 0, 24, 0, 0, 26, 0, 0, 0, 28, 30, 0, 0, 0, 0, 32, 34, 36, 38, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 7, 2, 0, 8, 6, 4, 1, 0, 4, 6, 4, 9, 0, 1, 0, 0, 8, 0, 0, 0, 9, 4, 0, 0, 0, 0, 7, 7, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-164039, -131150, -116010, -11112, 167952, 11395, -180283, 15477, -3874, -36008, 93442, -196791, 35655, 23823, 65589, 12381, -8070, -101942, 4183, 565, 20138, -598, 49970, -9278, 16935, -2323, -31580, -131150, 92203, -76215, 58151, 15523, -1476, 17821, -16921, 4127, -11203, 27812, -6622].span()
};
    let tree_21 = xgb_inference::Tree {
    base_weights: array![864, -18778, 3462, -3400, -71841, -20777, 6041, -38778, 14503, -6016, -25528, -47546, 16200, 41944, 2676, -1893, -26227, 21734, -11026, 6345, -71460, 52931, -22057, 85247, -43403, -41680, 5475, -10013, 9529, -69784, 39453, 7, -92574, 20709, 4161, -19686, 8446, 32269, 1089, 10812, -27301, -29089, -8361, 165, 32295, -1983, -26768, 20355, -4026, -31240, -7997, 10704, -13891, 2842, -5319, -15849, 14903].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 0, 19, 21, 23, 25, 27, 0, 0, 29, 0, 31, 33, 35, 37, 39, 41, 43, 0, 0, 45, 47, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 53, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 0, 20, 22, 24, 26, 28, 0, 0, 30, 0, 32, 34, 36, 38, 40, 42, 44, 0, 0, 46, 48, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 54, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 2, 3, 2, 5, 8, 3, 2, 2, 0, 0, 3, 8, 0, 3, 9, 0, 0, 7, 0, 5, 2, 8, 5, 7, 2, 5, 0, 0, 9, 7, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-109742, 57823, -89890, -36681, -13329, 17500, -75547, -54754, -11900, -6016, -25528, -115718, 72131, 40530, -70295, -15870, -26227, 21734, -25742, 6345, -55269, -59007, 130176, 55509, -33792, -23271, 54651, -10013, 9529, -29845, 67997, 7, 20883, 20709, 4161, -19686, 8446, 32269, 1089, 10812, -27301, -29089, -10150, 15968, -124185, -1983, -26768, 20355, -4026, -31240, -7997, 10704, -13891, 2842, -5319, -15849, 14903].span()
};
    let tree_22 = xgb_inference::Tree {
    base_weights: array![62, -8462, 7114, -2934, -54090, 44574, 804, -15277, 15526, -27342, 7592, 6163, 79571, 11614, -16933, -25192, 33557, 63494, -24022, -59269, 49963, 26923, 7086, -7273, 35311, 7235, -40221, -35628, 35277, -12326, 59986, 84970, -1385, 23823, -51576, -4883, -21811, 69800, -1210, 14462, -58652, 48971, -23531, 38664, -32427, -76337, -11801, 1780, -15914, -8631, 18216, 26958, -8306, 30147, -2377, 16109, -12973, -13474, 16413, -31658, 683, 25835, 5059, 8930, -7890, -22601, 4607, 21733, 3340, 5719, -22078, -9399, 17856, 14952, -20341, -3715, -26127, 18169, -11719].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 0, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 0, 0, 39, 41, 43, 45, 47, 49, 0, 51, 53, 55, 57, 59, 0, 0, 61, 0, 63, 65, 67, 69, 71, 73, 75, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 0, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 0, 0, 40, 42, 44, 46, 48, 50, 0, 52, 54, 56, 58, 60, 0, 0, 62, 0, 64, 66, 68, 70, 72, 74, 76, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![8, 8, 8, 6, 2, 9, 2, 2, 6, 0, 0, 7, 1, 4, 9, 9, 9, 4, 2, 0, 7, 0, 0, 4, 5, 8, 3, 8, 2, 0, 9, 7, 3, 4, 6, 0, 0, 1, 0, 6, 7, 4, 0, 9, 5, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-18657, -24159, -3621, 25860, 33420, -49303, 38670, 93529, 61999, -27342, 7592, -20077, 94158, 2991, -20234, 98366, -122216, 59061, -11242, 34026, 14560, 26923, 7086, -41733, 140366, 65055, -51056, -144957, -65649, -12326, 105262, 50015, -35345, -89244, 91915, -4883, -21811, 669, -1210, 43136, 78322, 71547, 42623, -120227, -27459, -74738, -43467, 1780, -15914, -8631, 18216, 26958, -8306, 30147, -2377, 16109, -12973, -13474, 16413, -31658, 683, 25835, 5059, 8930, -7890, -22601, 4607, 21733, 3340, 5719, -22078, -9399, 17856, 14952, -20341, -3715, -26127, 18169, -11719].span()
};
    let tree_23 = xgb_inference::Tree {
    base_weights: array![62, -1708, 26085, -28, -40498, -2901, 59188, -7909, 6258, -20048, -5298, 20568, -15130, 21387, 3151, 1063, -36690, 33729, -2420, 6341, -9588, -9555, 16375, -4233, 21296, 7195, -60566, 75827, -1548, 5282, -31905, 11867, -15798, 2842, -7468, 9183, -10600, -24756, 3987, 7227, 29583, -8045, 16687, -743, 13035, 14381, -14024].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 21, 0, 0, 0, 23, 25, 27, 29, 0, 0, 31, 0, 33, 0, 35, 37, 39, 41, 43, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 22, 0, 0, 0, 24, 26, 28, 30, 0, 0, 32, 0, 34, 0, 36, 38, 40, 42, 44, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 1, 6, 8, 9, 6, 2, 4, 8, 0, 5, 2, 0, 0, 0, 4, 3, 2, 9, 0, 0, 5, 0, 9, 0, 7, 2, 3, 4, 9, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![138213, 168879, 47628, -18657, -9520, 19949, 38670, 58151, 15968, -20048, -11997, -74594, -15130, 21387, 3151, 53948, -42501, 695, 118324, 6341, -9588, -21392, 16375, 35655, 21296, -28095, 93529, -55351, 59061, 79893, -73479, 11867, -15798, 2842, -7468, 9183, -10600, -24756, 3987, 7227, 29583, -8045, 16687, -743, 13035, 14381, -14024].span()
};
    let tree_24 = xgb_inference::Tree {
    base_weights: array![452, 14801, -446, -20121, 1286, -46247, 34218, 15332, 74, -58306, 4543, 25149, -4652, -21691, 3302, -1243, -24032, 26776, -37085, 35691, 1161, 21197, -3574, 1198, -15618, 21192, 2156, -11859, 1119].span(),
    left_children: array![1, 0, 3, 5, 7, 9, 11, 0, 13, 15, 0, 0, 0, 17, 19, 0, 0, 21, 23, 25, 27, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 0, 4, 6, 8, 10, 12, 0, 14, 16, 0, 0, 0, 18, 20, 0, 0, 22, 24, 26, 28, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 1, 7, 1, 9, 7, 0, 6, 1, 0, 0, 0, 3, 2, 0, 0, 9, 6, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-174961, 14801, -140938, 22019, -139832, 126237, 41306, 15332, -99959, -141545, 4543, 25149, -4652, -94055, -150985, -1243, -24032, -14501, -199574, 15477, -116010, 21197, -3574, 1198, -15618, 21192, 2156, -11859, 1119].span()
};
    let tree_25 = xgb_inference::Tree {
    base_weights: array![679, 18253, -1357, 55054, -5083, -35448, 2398, -1454, 25176, -33663, 40888, -56528, 5667, 52666, -345, -58844, 6137, -3240, 19030, 2262, -71003, 20897, -28440, 4757, 24575, 4074, -15785, -2321, -23515, 7519, -5352, -2511, -83246, -18715, 5022, 12521, -10128, 990, 74140, -49194, 87, -27647, -7265, 18184, -395, 6421, 28602, -26782, -535, 3969, -19086].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 0, 0, 15, 17, 19, 21, 23, 25, 27, 29, 0, 0, 0, 31, 0, 33, 35, 0, 37, 39, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 43, 45, 47, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 0, 0, 16, 18, 20, 22, 24, 26, 28, 30, 0, 0, 0, 32, 0, 34, 36, 0, 38, 40, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 44, 46, 48, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 5, 4, 5, 1, 5, 4, 0, 0, 4, 3, 3, 5, 8, 5, 4, 8, 0, 0, 0, 8, 0, 9, 2, 0, 5, 5, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 7, 6, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-147364, -57469, -87088, -130168, 77706, -12479, -65735, -1454, 25176, -172639, 121773, -16956, 2290, -7834, 63766, -183504, 49590, -3240, 19030, 2262, -138127, 20897, 51413, -69889, 24575, 58159, 92876, -2321, -23515, 7519, -5352, -2511, -107309, -18715, 5022, 12521, -10128, -173625, 6273, -10880, 63341, -27647, -7265, 18184, -395, 6421, 28602, -26782, -535, 3969, -19086].span()
};
    let tree_26 = xgb_inference::Tree {
    base_weights: array![697, -851, 23465, 1022, -26583, 5702, 18764, -861, 39072, -58622, 18161, 41164, -19881, 1965, -23488, -4179, 68719, -22574, 1644, 56339, -13218, 779, 17403, 9483, -43858, 4115, -58003, 13010, -46942, 4863, 25836, 4301, 21477, -22053, 3170, -112, 11745, -1390, -25543, 12442, -12910, -27491, -4011].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 15, 17, 19, 21, 23, 25, 27, 0, 29, 0, 0, 31, 0, 0, 0, 0, 33, 35, 37, 39, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 16, 18, 20, 22, 24, 26, 28, 0, 30, 0, 0, 32, 0, 0, 0, 0, 34, 36, 38, 40, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 6, 6, 6, 5, 4, 0, 2, 2, 6, 8, 5, 5, 4, 6, 0, 0, 0, 0, 3, 0, 0, 0, 0, 5, 4, 2, 8, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![138213, 123878, 74190, 94562, -16989, 159553, 18764, 130494, 13958, 232576, -11406, -22371, -33488, 116566, -1037, -4179, 40638, -22574, 1644, -33330, -13218, 779, 17403, 9483, 7561, 66525, -23271, 30836, 159080, 4863, 25836, 4301, 21477, -22053, 3170, -112, 11745, -1390, -25543, 12442, -12910, -27491, -4011].span()
};
    let tree_27 = xgb_inference::Tree {
    base_weights: array![434, -387, 12782, -1110, 13825, 3042, -12488, 47, 40115, -21935, 46138, 2065, -18303, 68866, -19948, 42674, -30464, -10616, 28869, -6458, 1897, 26285, -3857, 20301, -2115, -1147, -14956].span(),
    left_children: array![1, 3, 0, 5, 0, 7, 9, 11, 13, 15, 17, 19, 0, 21, 0, 23, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 0, 8, 10, 12, 14, 16, 18, 20, 0, 22, 0, 24, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 7, 0, 7, 0, 7, 6, 7, 6, 3, 1, 3, 0, 9, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![325080, 217019, 12782, 48813, 13825, 35366, 67519, 31690, 72200, -85803, 10142, -83468, -18303, 75262, -19948, -17252, -9558, -10616, 28869, -6458, 1897, 26285, -3857, 20301, -2115, -1147, -14956].span()
};
    let tree_28 = xgb_inference::Tree {
    base_weights: array![563, -10293, 4568, -16183, 41970, 7657, -28315, 10881, -32967, -1986, 21886, 40532, 3813, 10161, -47001, 56222, -12849, 26065, -43395, 51887, -6678, -20230, 8866, -7164, 11751, -75773, 3976, 816, 25030, -24608, 9588, -7208, 16438, -52671, 8801, 25735, 17241, 28911, -44818, 22973, 6395, -26643, -8551, -8167, 10024, -18949, 6258, -17537, 16863, -7737, 15200, 8157, -18196, 3346, -6699].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 0, 19, 21, 23, 25, 27, 29, 31, 33, 35, 0, 37, 39, 0, 0, 41, 0, 0, 0, 0, 43, 0, 0, 45, 0, 0, 47, 49, 51, 0, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 0, 20, 22, 24, 26, 28, 30, 32, 34, 36, 0, 38, 40, 0, 0, 42, 0, 0, 0, 0, 44, 0, 0, 46, 0, 0, 48, 50, 52, 0, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 7, 7, 7, 6, 9, 4, 0, 6, 0, 0, 5, 0, 0, 7, 2, 1, 9, 4, 6, 0, 1, 0, 0, 0, 8, 0, 0, 0, 0, 9, 0, 0, 8, 0, 0, 9, 3, 2, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-87878, 137049, 154336, -27656, 57870, -63197, -127341, 17180, -44506, -1986, 21886, 119022, -166730, 56740, 188898, 31784, -7633, -124185, 138213, 9459, -6678, -141545, -164810, -7164, 11751, 154113, 3976, 816, 25030, -24608, -126610, -7208, 16438, 102725, 8801, 25735, -80337, -114291, -76420, 22973, 74190, -26643, -8551, -8167, 10024, -18949, 6258, -17537, 16863, -7737, 15200, 8157, -18196, 3346, -6699].span()
};
    let tree_29 = xgb_inference::Tree {
    base_weights: array![702, 5994, -7099, 2905, 65564, -43450, 510, 5215, -40547, 24514, 3309, 6371, -57787, -4335, 39994, 445, 28414, 2858, -21144, -78033, -3240, 13427, -23159, 20266, -1800, -13452, 10055, 76087, 2718, -4868, -27809, 6390, -7895, 24019, -19092, -35959, 48091, -1233, -16992, 8290, -8367, 27784, 4116, 17555, -10343, 2476, 26518, 8207, -16636, 7438, -14041, -690, 22755].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 0, 0, 19, 21, 23, 25, 27, 0, 0, 29, 31, 33, 35, 0, 0, 37, 39, 41, 43, 0, 0, 0, 0, 45, 47, 49, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 0, 0, 20, 22, 24, 26, 28, 0, 0, 30, 32, 34, 36, 0, 0, 38, 40, 42, 44, 0, 0, 0, 0, 46, 48, 50, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 1, 6, 3, 6, 0, 8, 0, 0, 0, 8, 6, 6, 2, 4, 0, 0, 9, 6, 0, 3, 0, 0, 2, 7, 3, 2, 0, 0, 0, 0, 6, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![42817, 41769, 48097, 34410, 43345, -96320, 94562, 35785, -38693, 24514, 3309, 6371, 41865, -2219, 118025, -10093, 29388, 2858, -21144, -86874, -7596, 101880, 95651, 20266, -1800, -17720, 41306, 18600, -2016, -4868, -27809, 6390, -7895, -21359, -43036, 61295, -18444, -1233, -16992, 8290, -8367, 27784, 4116, 17555, -10343, 2476, 26518, 8207, -16636, 7438, -14041, -690, 22755].span()
};
    let tree_30 = xgb_inference::Tree {
    base_weights: array![1011, -8519, 5204, -26973, 3350, 18214, 3217, -54701, -2420, 34233, -12004, 35797, -4, 5818, -80377, 14743, -22815, 58202, -9097, -35932, 22201, 51674, -4934, -30375, 4950, -7294, 9989, -6944, -27615, 1521, -19866, -6560, 84508, 20980, -56695, -13379, 39965, -603, 70662, -45378, 15844, 7538, -15448, 15500, -8741, 7342, 28823, -3780, 13627, -3822, -23756, 20108, -789, 6557, 23643, -20427, 3187, 146, 10801].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 17, 19, 21, 23, 25, 27, 0, 29, 31, 0, 33, 35, 37, 0, 39, 41, 0, 0, 0, 0, 43, 0, 0, 45, 47, 49, 0, 51, 0, 53, 55, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 18, 20, 22, 24, 26, 28, 0, 30, 32, 0, 34, 36, 38, 0, 40, 42, 0, 0, 0, 0, 44, 0, 0, 46, 48, 50, 0, 52, 0, 54, 56, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![5, 7, 5, 6, 8, 0, 3, 7, 5, 4, 2, 6, 3, 7, 2, 0, 0, 8, 0, 4, 8, 6, 0, 4, 1, 0, 0, 0, 0, 4, 0, 0, 9, 3, 2, 0, 3, 0, 2, 2, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-34211, -36107, -30289, -15561, -38084, 18214, -96655, -135285, -157826, 57619, -12570, 11395, -74385, -169251, -53157, 14743, 87841, -109989, -9097, -168499, -31110, -172153, -4934, 91470, 180915, -7294, 9989, -6944, -27615, -42506, -19866, -6560, -80870, 191950, -87045, -13379, -33330, -603, -78933, 19633, 15844, 79893, -15448, 15500, -8741, 7342, 28823, -3780, 13627, -3822, -23756, 20108, -789, 6557, 23643, -20427, 3187, 146, 10801].span()
};
    let tree_31 = xgb_inference::Tree {
    base_weights: array![876, -31935, 1913, 4408, -16676, 20616, 690, -13927, 1832, 20544, 615, -54630, 2404, -3911, -22328, -6800, 1244].span(),
    left_children: array![1, 3, 5, 0, 0, 0, 7, 0, 9, 0, 11, 13, 15, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 0, 0, 8, 0, 10, 0, 12, 14, 16, 0, 0, 0, 0].span(),
    split_indices: array![5, 2, 5, 0, 0, 0, 5, 0, 5, 0, 5, 2, 9, 0, 0, 0, 0].span(),
    split_conditions: array![-220339, -5513, -198122, 4408, -16676, 20616, -170721, -13927, -157826, 20544, -130168, 16996, -130987, -3911, -22328, -6800, 1244].span()
};
    let tree_32 = xgb_inference::Tree {
    base_weights: array![478, 1803, -20589, 10908, -4471, -48958, 17167, 1619, 51700, -10047, 22081, -8017, -25436, 12693, -7895, 23156, -12663, 66829, -6740, 1892, -30632, 51113, -20934, 6240, -9847, 2366, 57977, -39390, 11858, -4323, 84369, -47153, 12177, 359, -45271, 65506, -1564, -54918, 18692, -5873, 14728, 6411, 29309, -16402, 2341, 21321, -7197, 30282, 10542, -25123, -155, 10485, -867, 12656, -14815, 3365, -16409, 1762, 24344, -3599, -20589, 14944, -6061].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 0, 0, 0, 25, 27, 29, 0, 31, 33, 35, 37, 0, 0, 39, 41, 43, 45, 0, 47, 49, 51, 53, 55, 57, 0, 59, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 0, 0, 0, 26, 28, 30, 0, 32, 34, 36, 38, 0, 0, 40, 42, 44, 46, 0, 48, 50, 52, 54, 56, 58, 0, 60, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 1, 1, 1, 2, 1, 5, 9, 6, 2, 6, 6, 0, 0, 0, 9, 6, 6, 0, 1, 4, 5, 6, 0, 0, 6, 5, 5, 6, 0, 8, 2, 1, 8, 7, 5, 0, 3, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![164194, -15361, -16655, -28250, 80427, -27814, -13589, -22038, 62984, 10403, 50770, 43003, -25436, 12693, -7895, -43533, -10880, -144250, -6740, -111, 12527, 39567, 88435, 6240, -9847, 28012, 56080, 89721, 20883, -4323, 82525, -45549, 30867, 4052, -123079, -34829, -1564, -21783, -14551, -5873, 14728, 6411, 29309, -16402, 2341, 21321, -7197, 30282, 10542, -25123, -155, 10485, -867, 12656, -14815, 3365, -16409, 1762, 24344, -3599, -20589, 14944, -6061].span()
};
    let tree_33 = xgb_inference::Tree {
    base_weights: array![676, -1432, 15895, 1693, -36338, 24072, -13365, -798, 25104, 1787, -55123, 66699, 2527, 2497, -37986, -6238, 35146, -12830, 11175, -24447, 67, 24410, 8761, 31064, -20587, 5164, -27438, 6732, -62321, 13381, 18722, 18921, -4719, -46304, 17835, -5114, 2552, -314, -17426, 11206, -7533, -26682, 1530, 13623, -3253, -21832, 1773, -8838, 16397].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 15, 17, 19, 21, 23, 25, 27, 0, 29, 0, 0, 0, 0, 0, 0, 31, 33, 35, 37, 39, 41, 43, 0, 0, 0, 45, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 16, 18, 20, 22, 24, 26, 28, 0, 30, 0, 0, 0, 0, 0, 0, 32, 34, 36, 38, 40, 42, 44, 0, 0, 0, 46, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 1, 7, 1, 5, 1, 0, 1, 6, 2, 5, 0, 0, 9, 4, 0, 5, 0, 0, 0, 0, 0, 0, 6, 6, 4, 7, 1, 6, 6, 0, 0, 0, 5, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![119188, 89835, 85070, 40342, -14700, 142857, -13365, 31182, -101681, 11673, 70958, 100871, 100289, 147231, 29388, -6238, -15155, -12830, 11175, -24447, 67, 24410, 8761, 15653, 25860, -98889, 26226, 36159, 68808, -2219, 18722, 18921, -4719, 47569, 17050, -5114, 2552, -314, -17426, 11206, -7533, -26682, 1530, 13623, -3253, -21832, 1773, -8838, 16397].span()
};
    let tree_34 = xgb_inference::Tree {
    base_weights: array![240, 4363, -8429, 10915, -7907, -19963, -2027, 43550, 1771, -28569, 8241, -18950, 3825, 54760, -3511, -20460, 12165, -57560, -1555, -10441, 15647, 53334, -7477, 20194, 28073, -30269, 12356, 2176, 52521, 1144, -24471, 33018, -33415, 25232, -10729, 8761, 23700, -21702, 800, 15098, -12124, -5048, -24325, -3352, 10340, -4574, 21897, -3180, 17176, -16264, 5458, 11074, -1657, 17144, -11287, 8754, -4817].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 17, 19, 0, 21, 23, 0, 25, 27, 29, 31, 0, 33, 35, 37, 39, 0, 41, 0, 43, 45, 0, 0, 47, 49, 51, 0, 53, 0, 0, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 18, 20, 0, 22, 24, 0, 26, 28, 30, 32, 0, 34, 36, 38, 40, 0, 42, 0, 44, 46, 0, 0, 48, 50, 52, 0, 54, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 9, 2, 1, 9, 0, 6, 6, 0, 8, 6, 0, 6, 3, 0, 6, 9, 3, 4, 0, 0, 1, 1, 4, 0, 6, 0, 6, 7, 0, 0, 5, 5, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![54777, 43682, 60326, -113757, 98366, -19963, -108564, 65543, 33559, -22423, -144250, -18950, -36079, -58430, -3511, 80090, -598, -76215, -42506, -10441, 103598, -33490, -139253, 44921, 28073, 67011, 12356, 53643, -156902, 1144, -24471, -36811, 143004, 33676, -10729, -172621, 23700, -21702, 25034, 15098, -12124, -5048, -24325, -3352, 10340, -4574, 21897, -3180, 17176, -16264, 5458, 11074, -1657, 17144, -11287, 8754, -4817].span()
};
    let tree_35 = xgb_inference::Tree {
    base_weights: array![37, -1821, 13968, 878, -26300, -1688, 43919, -1340, 24541, -22751, 1161, 36495, -30860, 21744, 11006, 1279, -32656, -13410, 45085, 18777, -18969, 19148, 572, -45554, 1297, 14269, -8585, 12629, -552, 4159, -49368, 5827, -13381, 63506, -1928, -56738, 16350, -6063, 6281, 1041, -19095, -10061, 635, -2961, -19871, 6778, 23067, -20792, -5853, -4751, 12015].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 21, 23, 0, 25, 27, 29, 31, 33, 0, 35, 0, 37, 39, 0, 0, 0, 0, 41, 0, 43, 0, 0, 45, 0, 47, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 22, 24, 0, 26, 28, 30, 32, 34, 0, 36, 0, 38, 40, 0, 0, 0, 0, 42, 0, 44, 0, 0, 46, 0, 48, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 0, 3, 1, 9, 3, 0, 1, 2, 0, 9, 1, 6, 0, 1, 2, 2, 2, 3, 0, 9, 0, 1, 6, 0, 0, 0, 0, 2, 0, 8, 0, 0, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![119188, 80042, 59117, 40342, -2439, -51401, 98160, 31182, -46759, -22751, 24003, 142857, 55021, 21744, 160207, -179388, -78933, -69889, -38744, 18777, 110336, 19148, 166192, -15236, 1297, 14269, -8585, 12629, -116010, 4159, -38693, 5827, -13381, -56863, -1928, 96186, 8630, -6063, 6281, 1041, -19095, -10061, 635, -2961, -19871, 6778, 23067, -20792, -5853, -4751, 12015].span()
};
    let tree_36 = xgb_inference::Tree {
    base_weights: array![136, 1495, -20949, 17227, -280, -15729, 5541, -858, 47759, -35934, 1680, -7895, 9819, 20460, -14854, 20393, -597, -61922, 7613, -25271, 3428, -18359, 48077, -6969, -22095, -58821, 9202, 50045, 810, 4123, -11936, 20942, -1894, -23030, -5124, 22446, -5361, -3644, 2153].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 17, 19, 0, 0, 21, 0, 0, 0, 23, 0, 25, 27, 29, 31, 0, 0, 33, 0, 35, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 18, 20, 0, 0, 22, 0, 0, 0, 24, 0, 26, 28, 30, 32, 0, 0, 34, 0, 36, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 8, 4, 7, 9, 0, 3, 7, 7, 5, 8, 0, 0, 6, 0, 0, 0, 5, 0, 6, 8, 2, 1, 0, 0, 9, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![164194, -143067, 23331, -46122, -132812, -15729, -41336, -127790, 80539, 35321, -109113, -7895, 9819, -90613, -14854, 20393, -597, -17544, 7613, 25860, -82785, 17208, 136672, -6969, -22095, -37355, 9202, 36801, -18657, 4123, -11936, 20942, -1894, -23030, -5124, 22446, -5361, -3644, 2153].span()
};
    let tree_37 = xgb_inference::Tree {
    base_weights: array![-77, 4887, -6805, -1950, 27490, -46266, -677, 11539, -12246, 36226, -12582, -27100, 13185, 38452, -4537, -30390, 20836, -1832, -50416, 44422, -5371, -9841, 14855, -1564, 18700, -39449, 1692, 9299, -19418, 42195, -16234, -29437, 11246, -78448, -7827, 56396, -6796, 10626, -62684, 19977, -12199, -5836, 17373, -11744, 5569, 1593, -18921, 14183, -2975, -29461, -4856, 14505, -14819, 3764, 22082, -9936, 6710, -23778, -2265, 15374, -2913, -6184, 15974].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 0, 0, 21, 23, 25, 27, 29, 31, 33, 35, 0, 0, 0, 0, 0, 37, 39, 0, 0, 41, 43, 45, 47, 49, 51, 53, 55, 0, 57, 59, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 0, 0, 22, 24, 26, 28, 30, 32, 34, 36, 0, 0, 0, 0, 0, 38, 40, 0, 0, 42, 44, 46, 48, 50, 52, 54, 56, 0, 58, 60, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![8, 8, 8, 4, 0, 4, 3, 0, 8, 5, 0, 0, 7, 7, 6, 0, 0, 4, 3, 2, 0, 0, 0, 0, 0, 5, 3, 0, 0, 4, 3, 3, 4, 6, 1, 3, 4, 0, 5, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![15968, -16775, 26890, 22104, 100289, 4577, -94055, -172322, -29552, 45506, -12582, -27100, -10442, 6273, -108564, -173625, 67011, 42982, -45211, 111625, -5371, -9841, 14855, -1564, 18700, -79849, -44982, 9299, -19418, -100045, 66455, -65854, 58151, 62, -3210, -51056, -8453, 10626, 221648, 51132, 98873, -5836, 17373, -11744, 5569, 1593, -18921, 14183, -2975, -29461, -4856, 14505, -14819, 3764, 22082, -9936, 6710, -23778, -2265, 15374, -2913, -6184, 15974].span()
};
    let tree_38 = xgb_inference::Tree {
    base_weights: array![-371, -1714, 21288, 3, -25172, -4956, 33728, -1754, 25270, 17131, -53541, 373, 43016, 851, -28736, -7612, 53309, -8059, 13679, -4815, -22800, 15474, 3103, -4407, 15705, -49931, 12309, 23352, 1545, 1602, -6475, 14770, -1212, -21406, 4457].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 17, 19, 0, 21, 23, 25, 0, 27, 0, 0, 0, 0, 0, 0, 29, 31, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 18, 20, 0, 22, 24, 26, 0, 28, 0, 0, 0, 0, 0, 0, 30, 32, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 6, 6, 6, 2, 0, 7, 6, 8, 5, 8, 0, 6, 6, 7, 0, 6, 0, 0, 0, 0, 0, 0, 5, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![138213, 123878, -27920, 88435, 10403, -4956, -46122, 67011, -31110, -41345, -11406, 373, 52504, 25860, 43473, -7612, 100693, -8059, 13679, -4815, -22800, 15474, 3103, 39567, -24627, 16811, 12309, 23352, 1545, 1602, -6475, 14770, -1212, -21406, 4457].span()
};
    let tree_39 = xgb_inference::Tree {
    base_weights: array![-128, 23492, -1330, -4657, 42121, -16849, 443, 636, 20314, 1680, -35874, -706, 23963, -13571, -2858, 1810, -31712, 41391, -12655, -101, 17440, -18889, 2150, 3318, 19453].span(),
    left_children: array![1, 3, 5, 0, 7, 0, 9, 0, 0, 11, 13, 15, 17, 0, 0, 19, 21, 23, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 8, 0, 10, 0, 0, 12, 14, 16, 18, 0, 0, 20, 22, 24, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 6, 6, 0, 5, 0, 5, 0, 0, 5, 2, 5, 4, 0, 0, 5, 3, 9, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-199574, -303655, -172153, -4657, 139084, -16849, 211168, 636, 20314, 92876, 1499, 63766, 60706, -13571, -2858, 58159, -61913, -598, -12655, -101, 17440, -18889, 2150, 3318, 19453].span()
};
    let tree_40 = xgb_inference::Tree {
    base_weights: array![-131, -2567, 10916, -820, -15370, 20398, -991, -3686, 15214, 23783, -22438, -419, -41350, -4104, 46172, 19157, -350, -20631, 3523, 16259, -2107, -63547, 9182, 13661, -24035, 20284, -777, -17008, 9078, -17923, 37652, 456, -7027, -22522, -5191, 7564, -11029, -16128, 5929, 8391, -11043, 13687, 3312].span(),
    left_children: array![1, 3, 5, 7, 0, 0, 9, 11, 13, 15, 17, 19, 21, 23, 25, 0, 27, 0, 29, 0, 31, 33, 0, 0, 35, 0, 0, 37, 0, 39, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 0, 10, 12, 14, 16, 18, 20, 22, 24, 26, 0, 28, 0, 30, 0, 32, 34, 0, 0, 36, 0, 0, 38, 0, 40, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 4, 1, 5, 0, 0, 7, 5, 3, 3, 7, 1, 6, 3, 1, 0, 7, 0, 3, 0, 8, 0, 0, 0, 5, 0, 0, 4, 0, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![66525, 63811, -24215, 92876, -15370, 20398, -11350, 63766, -56863, -54121, 19217, -141933, 25860, -88673, -22561, 19157, -32217, -20631, 32921, 16259, 104873, 46908, 9182, 13661, 102360, 20284, -777, 119432, 9078, -68978, -108211, 456, -7027, -22522, -5191, 7564, -11029, -16128, 5929, 8391, -11043, 13687, 3312].span()
};
    let tree_41 = xgb_inference::Tree {
    base_weights: array![287, -481, 10323, -20776, 1250, 14855, -51829, -3192, 10893, -10441, 40792, -21267, 1221, 1433, -32416, 40244, -1151, 19780, -690, 21649, -5903, -57911, 25858, 51348, -4479, 7468, -17763, 17522, -1306, -9864, 581, -20485, -2905, -3287, 14233, 2658, 19851, -1774, 11934].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 13, 15, 0, 17, 0, 0, 19, 21, 23, 25, 0, 0, 27, 29, 31, 33, 35, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 14, 16, 0, 18, 0, 0, 20, 22, 24, 26, 0, 0, 28, 30, 32, 34, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 5, 0, 3, 4, 6, 1, 4, 1, 0, 8, 0, 0, 9, 3, 2, 5, 0, 0, 3, 9, 5, 4, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![325080, -130168, 10323, -51401, 50575, -90613, 27737, 42200, -15361, -10441, -124916, -21267, 1221, -38420, -41551, 130494, 107309, 19780, -690, -43467, -598, 127074, 45358, -51056, -4479, 67470, -17763, 17522, -1306, -9864, 581, -20485, -2905, -3287, 14233, 2658, 19851, -1774, 11934].span()
};
    let tree_42 = xgb_inference::Tree {
    base_weights: array![280, -2060, 10480, -3472, 11480, -9430, 37286, -904, -48565, 14929, -34981, 54328, -6475, -3297, 43486, -19027, -171, 37308, -8508, -20065, -2175, 66703, 2925, -30398, -177, 2639, 19207, 19356, -1451, 11958, -16170, -9369, 10003, 25987, 7016, -15247, 12727, 14053, -682].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 15, 17, 19, 21, 0, 23, 25, 0, 0, 27, 29, 0, 31, 33, 0, 35, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 16, 18, 20, 22, 0, 24, 26, 0, 0, 28, 30, 0, 32, 34, 0, 36, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 7, 6, 7, 0, 6, 4, 7, 6, 8, 5, 8, 0, 4, 8, 0, 0, 0, 5, 0, 9, 5, 0, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![74821, 188898, 5180, 154336, 11480, -41569, 82339, 129984, 43345, 29727, -24586, 67039, -6475, -85559, 82525, -19027, -171, 90322, -75849, -20065, -80337, -19290, 2925, 33480, -65735, 2639, 19207, 19356, -1451, 11958, -16170, -9369, 10003, 25987, 7016, -15247, 12727, 14053, -682].span()
};
    let tree_43 = xgb_inference::Tree {
    base_weights: array![734, -983, 13353, 1096, -24383, 38291, 197, -5967, 7491, -36849, 6950, 15415, 663, 15460, -22893, 12885, -9124, 26525, -2840, 4664, -52850, 13556, -8594, 7813, -18150, 12475, -16721, -10370, 45058, -20251, 23350, 401, -26366, -11198, 10785, -1871, 12699, -20595, -3110, 3578, -13083, -2260, 17837, 7561, -8342, 12452, -4984].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 0, 0, 0, 21, 23, 0, 25, 27, 29, 0, 31, 0, 33, 0, 0, 35, 37, 39, 41, 43, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 0, 0, 0, 22, 24, 0, 26, 28, 30, 0, 32, 0, 34, 0, 0, 36, 38, 40, 42, 44, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 1, 1, 5, 6, 6, 9, 4, 7, 4, 0, 0, 0, 1, 2, 0, 3, 6, 7, 0, 6, 0, 1, 0, 0, 5, 3, 9, 8, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![119188, 89835, 142857, -15155, 62984, -15561, 68160, -183504, -24339, -118312, 6950, 15415, 663, 166192, 2138, 12885, -66297, -43192, 81225, 4664, -2997, 13556, 192639, 7813, -18150, -40437, -58430, 27736, -62046, -139832, 73861, 401, -26366, -11198, 10785, -1871, 12699, -20595, -3110, 3578, -13083, -2260, 17837, 7561, -8342, 12452, -4984].span()
};
    let tree_44 = xgb_inference::Tree {
    base_weights: array![711, -2503, 6736, 392, -42727, 44246, -893, -19585, 5648, -20649, 2870, 54077, 20, 43661, -7260, -30148, 10012, 15798, -10154, 805, 21133, 21433, -1790, -39498, 4325, -7891, -60847, -1731, 34320, -31940, 5843, 4699, -60121, -11520, 21142, -8817, 9903, -24018, 1029, 5989, -7306, 12875, -8738, 7802, -13326, -1324, 12751, -2980, -22008, 3273, -10707, 241, 14399].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 0, 19, 0, 21, 23, 25, 0, 27, 29, 0, 0, 0, 0, 31, 33, 35, 37, 39, 41, 43, 45, 0, 47, 49, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 0, 20, 0, 22, 24, 26, 0, 28, 30, 0, 0, 0, 0, 32, 34, 36, 38, 40, 42, 44, 46, 0, 48, 50, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 3, 3, 0, 9, 9, 1, 4, 0, 0, 0, 9, 0, 2, 3, 2, 0, 8, 1, 0, 0, 0, 0, 8, 6, 6, 9, 8, 6, 1, 9, 0, 7, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-16355, -24256, 5491, -163359, -14501, 18491, -119612, 57071, 45422, -20649, 2870, -118205, 20, 9971, 40588, 53376, 10012, -12630, 43917, 805, 21133, 21433, -1790, -22943, 5180, 25860, 60155, -41761, 123878, -34137, 151785, 4699, -29569, 33480, 44043, -8817, 9903, -24018, 1029, 5989, -7306, 12875, -8738, 7802, -13326, -1324, 12751, -2980, -22008, 3273, -10707, 241, 14399].span()
};
    let tree_45 = xgb_inference::Tree {
    base_weights: array![584, 1890, -13223, -143, 24285, 6577, -22616, 1159, -13866, 34359, -5746, 1237, -40417, -31179, 2444, 51759, -381, -9126, 11666, -19011, 2458, 2562, -16731, 30304, 349, 4300, 20018, -7938, 7733, -2539, 13352, -10934, 868].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 0, 15, 0, 17, 19, 21, 23, 25, 27, 0, 0, 0, 0, 0, 0, 29, 31, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 0, 16, 0, 18, 20, 22, 24, 26, 28, 0, 0, 0, 0, 0, 0, 30, 32, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 1, 8, 1, 7, 0, 5, 8, 0, 1, 0, 6, 7, 7, 8, 1, 8, 0, 0, 0, 0, 0, 0, 7, 8, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![100871, 106462, -186676, 97718, 75702, 6577, -22150, -193657, -13866, 164527, -5746, 4695, 37791, -163125, -143067, 119188, -16263, -9126, 11666, -19011, 2458, 2562, -16731, -158396, -109113, 4300, 20018, -7938, 7733, -2539, 13352, -10934, 868].span()
};
    let tree_46 = xgb_inference::Tree {
    base_weights: array![233, -17505, 1386, 14729, -43274, 25479, -302, -3067, 10050, -18904, -1373, -12108, 49840, 4144, -11088, 634, 19547, -358, 29260, -20799, 28955, 3005, -44295, 25817, -1209, -44054, 9843, 20188, -942, 3623, -2047, -18283, -702, -8789, 9696, -18415, -3139, -6640, 7839, -9717, 6485].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 0, 0, 0, 0, 0, 15, 17, 19, 0, 0, 21, 23, 25, 27, 29, 31, 0, 33, 35, 37, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 0, 0, 0, 0, 0, 16, 18, 20, 0, 0, 22, 24, 26, 28, 30, 32, 0, 34, 36, 38, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 1, 9, 1, 4, 2, 6, 0, 0, 0, 0, 0, 6, 6, 5, 0, 0, 6, 8, 1, 4, 4, 3, 0, 4, 6, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-130987, -13260, -124235, -24215, 124563, -112237, 43345, -3067, 10050, -18904, -1373, -12108, -18071, 25860, 26635, 634, 19547, 19949, -24627, 22396, -6265, 25260, -25509, 25817, 14922, 80090, -32109, 20188, 268, 3623, -2047, -18283, -702, -8789, 9696, -18415, -3139, -6640, 7839, -9717, 6485].span()
};
    let tree_47 = xgb_inference::Tree {
    base_weights: array![197, 2792, -8351, -83, 25257, 26494, -16566, 2259, -35604, -6868, 39506, 17338, -1402, -44547, -7098, -20818, 5670, 4460, -17732, 54792, -5620, 7997, -9435, -16740, -2916, 10278, -46807, 17478, -38438, 343, 27697, 18796, 4265, 26362, -26104, -20119, 2961, 12081, -3834, 4768, -17135, 1639, -8777, 12846, -7610, -8912, 11875, -12990, 2633].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 21, 23, 25, 27, 29, 0, 0, 31, 0, 0, 0, 0, 0, 33, 35, 37, 39, 41, 43, 0, 0, 45, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 22, 24, 26, 28, 30, 0, 0, 32, 0, 0, 0, 0, 0, 34, 36, 38, 40, 42, 44, 0, 0, 46, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![8, 8, 5, 8, 6, 9, 5, 3, 2, 0, 6, 0, 4, 2, 2, 6, 9, 0, 0, 2, 0, 0, 0, 0, 0, 0, 8, 9, 4, 9, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![70952, 44043, -75849, 34215, -61113, -52006, -23926, -89890, -45549, -6868, 44727, 17338, -172639, 27816, 73861, -103956, 98366, 4460, -17732, 54777, -5620, 7997, -9435, -16740, -2916, 61295, 144800, 24003, -33558, 43682, 146077, 18796, 4265, -169940, -55824, -20119, 2961, 12081, -3834, 4768, -17135, 1639, -8777, 12846, -7610, -8912, 11875, -12990, 2633].span()
};
    let tree_48 = xgb_inference::Tree {
    base_weights: array![-281, 3472, -5890, -18737, 7823, 18608, -13824, -29430, 9866, 3371, 42893, 3358, 15696, -28490, 910, 7223, -47014, -42484, 6786, 9691, 19963, 31943, -23315, -41791, 5502, -14925, 10564, -59295, 1365, -2887, -16175, 19787, -7530, -7833, 12810, 17929, -1826, -15979, 6690, 4706, -56378, 12814, -30310, -13998, 31539, -21141, -5063, -5001, 9099, 3682, -7972, 1823, -21540, -14090, 553, 6814, -11376, 1223, 18644].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 17, 19, 21, 0, 23, 25, 0, 27, 29, 31, 33, 0, 35, 37, 39, 41, 0, 43, 45, 0, 0, 0, 47, 49, 0, 0, 0, 0, 0, 0, 0, 51, 0, 53, 55, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 18, 20, 22, 0, 24, 26, 0, 28, 30, 32, 34, 0, 36, 38, 40, 42, 0, 44, 46, 0, 0, 0, 48, 50, 0, 0, 0, 0, 0, 0, 0, 52, 0, 54, 56, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 0, 3, 5, 7, 3, 7, 4, 0, 6, 2, 3, 0, 0, 3, 0, 6, 8, 1, 1, 0, 1, 2, 0, 5, 0, 5, 3, 0, 0, 0, 5, 7, 0, 0, 0, 0, 0, 0, 0, 8, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![12459, -163359, -65854, 89721, -1736, -72716, 81225, -51113, 9866, -172153, 19633, -85803, 15696, 57993, -55351, 7223, 43897, -46691, 21752, 11465, 19963, -17252, -6408, -165269, -16674, -14925, -16674, -58430, 1365, -2887, -16175, -86679, -49144, -7833, 12810, 17929, -1826, -15979, 6690, 4706, -52798, 12814, 28760, 41239, 35785, -21141, -5063, -5001, 9099, 3682, -7972, 1823, -21540, -14090, 553, 6814, -11376, 1223, 18644].span()
};
    let tree_49 = xgb_inference::Tree {
    base_weights: array![-168, -8382, 2824, -13142, 10391, 28856, -160, 6167, -24670, 40637, -4846, -26509, 2171, 12997, -10430, 6927, -33041, 57756, -1860, -15194, 3071, 7563, -12672, -14965, 14186, 4842, -42530, 3401, 21202, 14224, -18252, 26253, -21467, -3755, 12003, -10014, 13945, -15040, 3670, 8279, -70, 2251, -13195, 11859, 311, -542, -12722].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 15, 17, 0, 19, 21, 0, 23, 0, 25, 27, 0, 0, 0, 29, 31, 0, 33, 35, 37, 0, 0, 39, 41, 43, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 16, 18, 0, 20, 22, 0, 24, 0, 26, 28, 0, 0, 0, 30, 32, 0, 34, 36, 38, 0, 0, 40, 42, 44, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 7, 9, 7, 0, 5, 8, 4, 6, 2, 0, 1, 8, 0, 4, 0, 1, 2, 0, 0, 0, 6, 4, 0, 2, 1, 4, 0, 0, 9, 7, 8, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-87878, 154336, -63197, -27656, 10391, 72389, -156090, 48911, -47629, 34651, -4846, 94158, 68809, 12997, 66306, 6927, -15590, -84140, -1860, -15194, 3071, 67011, -172639, -14965, 2138, -24215, 136891, 3401, 21202, 43682, -17402, 172106, -48561, -3755, 12003, -10014, 13945, -15040, 3670, 8279, -70, 2251, -13195, 11859, 311, -542, -12722].span()
};
    let tree_50 = xgb_inference::Tree {
    base_weights: array![93, -18983, 1324, 6163, -40519, 22235, -104, -2353, -17589, -10008, 43771, -23387, 1413, 468, 17054, -14371, 6016, 14441, -99, -1924, 4679, 22243, -2205, 15198, -1397, 703, -4432].span(),
    left_children: array![1, 3, 5, 0, 7, 9, 11, 0, 0, 0, 13, 15, 17, 0, 0, 0, 19, 0, 21, 0, 0, 23, 25, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 8, 10, 12, 0, 0, 0, 14, 16, 18, 0, 0, 0, 20, 0, 22, 0, 0, 24, 26, 0, 0, 0, 0].span(),
    split_indices: array![9, 0, 9, 0, 9, 2, 9, 0, 0, 0, 6, 0, 9, 0, 0, 0, 5, 0, 2, 0, 0, 1, 7, 0, 0, 0, 0].span(),
    split_conditions: array![-130987, 26097, -124235, 6163, -136822, -112237, -116911, -2353, -17589, -10008, -18071, 35054, -115078, 468, 17054, -14371, -13876, 14441, -135148, -1924, 4679, 15477, 48813, 15198, -1397, 703, -4432].span()
};
    let tree_51 = xgb_inference::Tree {
    base_weights: array![156, -847, 21395, 314, -13144, -2226, 14260, -879, 25160, 7220, -4126, -6877, 15645, 27221, -5378, 28, -24586, -6704, 11973, -8639, 4203, -1312, 10798, -13641, 3198].span(),
    left_children: array![1, 3, 5, 7, 0, 0, 0, 9, 11, 13, 15, 0, 0, 17, 19, 21, 23, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 0, 0, 10, 12, 14, 16, 0, 0, 18, 20, 22, 24, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![8, 8, 9, 8, 0, 0, 0, 6, 6, 9, 8, 0, 0, 7, 0, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![184107, 175912, 79893, 154113, -13144, -2226, 14260, -38265, -51216, -25429, 68809, -6877, 15645, -127790, 27121, 44043, 50575, -6704, 11973, -8639, 4203, -1312, 10798, -13641, 3198].span()
};
    let tree_52 = xgb_inference::Tree {
    base_weights: array![215, 1738, -15480, -95, 22490, 4704, -23574, 1456, -35575, 15786, 4345, 2284, -34227, 2622, -10468, -13389, -2707, -8206, 27392, -16967, 2000, 671, 25573, 12157, 840, 1968, -2904, -815, 12442].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 0, 17, 0, 19, 21, 0, 0, 0, 0, 23, 0, 0, 25, 27, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 0, 18, 0, 20, 22, 0, 0, 0, 0, 24, 0, 0, 26, 28, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 8, 0, 0, 0, 3, 2, 8, 0, 2, 0, 6, 8, 0, 0, 0, 0, 7, 0, 0, 8, 5, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![100871, 93989, -186676, 89128, 96176, 4704, -66703, 195389, -44002, 15786, -29720, 2284, 38231, 156904, -10468, -13389, -2707, -8206, -50992, -16967, 2000, 21888, -36811, 12157, 840, 1968, -2904, -815, 12442].span()
};
    let tree_53 = xgb_inference::Tree {
    base_weights: array![108, -5044, 4481, -10862, 16422, 32467, -523, -4047, -53575, 14962, 1843, -1391, 17957, 33292, -4264, 8172, -20096, -5255, -19673, -27890, 28105, 9556, -10826, 16741, -3098, 7804, -13028, -3292, 54914, -28743, 6166, -13798, -41, -6349, 17107, 36440, -1598, -41981, 1765, 2146, -19004, 4377, 20224, -4939, -18702, 17404, 336, 7139, -4851, -21932, -6565, 9122, -3521].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 21, 0, 23, 25, 27, 29, 0, 0, 31, 33, 0, 0, 0, 0, 35, 37, 39, 41, 43, 0, 0, 0, 0, 0, 45, 47, 49, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 22, 0, 24, 26, 28, 30, 0, 0, 32, 34, 0, 0, 0, 0, 36, 38, 40, 42, 44, 0, 0, 0, 0, 0, 46, 48, 50, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![8, 2, 8, 8, 6, 9, 3, 4, 6, 0, 9, 2, 0, 5, 9, 8, 4, 0, 0, 2, 5, 0, 0, 0, 0, 3, 3, 8, 3, 8, 0, 0, 0, 0, 0, 5, 0, 8, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-18657, 87337, -3621, -24627, -21359, -49303, -96655, 35671, 23293, 14962, -14501, -24050, 17957, 61264, -36430, -31110, 136891, -5255, -19673, 130494, -65300, 9556, -10826, 16741, -3098, -65854, -57946, -38693, -73541, -33054, 6166, -13798, -41, -6349, 17107, 75207, 22583, 31612, -40148, 2146, -19004, 4377, 20224, -4939, -18702, 17404, 336, 7139, -4851, -21932, -6565, 9122, -3521].span()
};
    let tree_54 = xgb_inference::Tree {
    base_weights: array![157, -3202, 6625, -393, -41123, 39146, -90, -2177, 25448, -2254, -19116, 45683, 3256, 21683, -8992, 154, -23971, -2075, 13443, 16135, 4127, 40954, 1009, -40540, 5951, -2412, 12640, -43758, 3465, -3456, 19642, -17391, 9755, -18679, -11272, -15697, 28955, 325, -10302, -1237, -18892, 2522, -10284, -13709, 10834, 129, -14891, 13268, -5986].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 0, 19, 0, 21, 23, 25, 27, 0, 0, 0, 0, 29, 31, 33, 35, 37, 0, 39, 0, 0, 0, 41, 0, 0, 43, 45, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 0, 20, 0, 22, 24, 26, 28, 0, 0, 0, 0, 30, 32, 34, 36, 38, 0, 40, 0, 0, 0, 42, 0, 0, 44, 46, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 3, 3, 4, 8, 0, 4, 6, 5, 0, 0, 1, 0, 5, 4, 6, 6, 0, 0, 0, 0, 5, 1, 3, 9, 6, 0, 5, 0, 0, 0, 0, 0, 0, 6, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-16355, -24256, 5491, 96006, 5640, 57993, -147364, 100693, -8287, -2254, -19116, 7963, 3256, -57469, -85559, 80090, 150139, -2075, 13443, 16135, 4127, -130168, 94158, 61328, -79014, 58766, 12640, -6649, 3465, -3456, 19642, 43539, 9755, -18679, 1570, -107305, 98160, 325, -10302, -1237, -18892, 2522, -10284, -13709, 10834, 129, -14891, 13268, -5986].span()
};
    let tree_55 = xgb_inference::Tree {
    base_weights: array![-25, -801, 9041, 800, -12882, -2097, 22512, -41346, 6209, -947, -9654, -6964, 32802, -16394, -3827, 11966, -11203, 13629, -3831, 52397, 2089, -12694, 12677, -1351, 13926, -566, -10279, 20818, 4945, 11004, -8761, 9046, -3611].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 13, 15, 17, 0, 0, 19, 0, 0, 0, 21, 23, 25, 27, 29, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 14, 16, 18, 0, 0, 20, 0, 0, 0, 22, 24, 26, 28, 30, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 9, 0, 9, 5, 3, 7, 9, 7, 4, 0, 0, 5, 0, 0, 0, 6, 4, 9, 3, 9, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![325080, 138677, 9041, 98366, -41153, 235324, -74072, 161922, -57824, -50120, -9654, -6964, -11997, -16394, -3827, 11966, -38265, -85559, 84277, -23400, 115493, -12694, 16996, -1351, 13926, -566, -10279, 20818, 4945, 11004, -8761, 9046, -3611].span()
};
    let tree_56 = xgb_inference::Tree {
    base_weights: array![99, 20766, -1030, -4219, 37273, -13894, 634, 13844, 2876, 1773, -25906, 225, 23681, -11132, -610, -814, 8797, 50307, -7328, 647, -4206, 18553, 4786].span(),
    left_children: array![1, 3, 5, 0, 7, 0, 9, 0, 0, 11, 13, 15, 17, 0, 0, 19, 0, 21, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 8, 0, 10, 0, 0, 12, 14, 16, 18, 0, 0, 20, 0, 22, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 6, 6, 0, 3, 0, 5, 0, 0, 5, 3, 8, 4, 0, 0, 8, 0, 4, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-199574, -303655, -172153, -4219, -75297, -13894, 208067, 13844, 2876, 115226, -72825, 185452, 53948, -11132, -610, 70952, 8797, 33689, -7328, 647, -4206, 18553, 4786].span()
};
    let tree_57 = xgb_inference::Tree {
    base_weights: array![190, -4816, 4584, 2626, -17764, 28724, 698, 21483, -7327, -41883, 7081, -763, 15780, 29875, -2496, -13497, 54097, -13540, 8143, -16839, -13694, 27798, -31588, -10887, 8211, 14515, -1884, 13447, -9151, -37187, 7258, 4487, 20859, -12943, -5947, -10033, 5116, 41100, -3006, -15093, 715, -8022, 25748, -26677, 1986, -641, -15354, 5592, -5675, 21043, -768, 11111, -3640, -2248, -16359, -11297, 3056].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 0, 25, 27, 29, 31, 33, 0, 0, 35, 37, 39, 0, 0, 0, 0, 41, 43, 45, 0, 0, 0, 0, 47, 0, 0, 49, 0, 0, 0, 0, 51, 53, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 0, 26, 28, 30, 32, 34, 0, 0, 36, 38, 40, 0, 0, 0, 0, 42, 44, 46, 0, 0, 0, 0, 48, 0, 0, 50, 0, 0, 0, 0, 52, 54, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![8, 8, 8, 1, 3, 9, 3, 7, 6, 9, 6, 7, 0, 5, 5, 5, 9, 1, 0, 0, 2, 9, 5, 0, 0, 0, 0, 1, 5, 8, 0, 0, 0, 0, 1, 0, 0, 4, 0, 0, 0, 0, 8, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-16775, -41761, -3621, -34137, -45211, -49303, -96655, -76766, 94562, -7886, 63535, -17402, 15780, 61264, -23498, -65300, -6302, -11857, 8143, -16839, -29474, 32703, -17860, -10887, 8211, 14515, -1884, -18893, 21463, -130045, 7258, 4487, 20859, -12943, 24997, -10033, 5116, 61792, -3006, -15093, 715, -8022, 172106, 48925, -108564, -641, -15354, 5592, -5675, 21043, -768, 11111, -3640, -2248, -16359, -11297, 3056].span()
};
    let tree_58 = xgb_inference::Tree {
    base_weights: array![58, 19918, -1020, -3455, 11852, -11663, 335, 7912, -547, -21835, 1667, -47063, 14125, 24397, -998, -18326, -1282, 12207, -5085, 14991, -8475, -10376, 392].span(),
    left_children: array![1, 3, 5, 0, 0, 0, 7, 0, 9, 11, 13, 15, 17, 19, 21, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 0, 0, 8, 0, 10, 12, 14, 16, 18, 20, 22, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 7, 6, 0, 0, 0, 3, 0, 3, 1, 3, 6, 0, 5, 3, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-199574, -23084, -172153, -3455, 11852, -11663, -119524, 7912, -89890, 10653, -74738, 4695, 67011, 55509, -70295, -18326, -1282, 12207, -5085, 14991, -8475, -10376, 392].span()
};
    let tree_59 = xgb_inference::Tree {
    base_weights: array![-95, -965, 7123, -13724, 863, -30034, 15666, 2543, -21291, -42124, 4498, -4532, 12374, 4787, -13997, -12729, 2633, -1426, -53276, 26497, 2244, -25192, 8789, -18949, -5637, 12999, -6598, 2095, -2619, -11414, 6407].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 13, 15, 17, 0, 0, 0, 19, 21, 0, 0, 0, 23, 25, 27, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 14, 16, 18, 0, 0, 0, 20, 22, 0, 0, 0, 24, 26, 28, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 2, 0, 6, 6, 7, 5, 9, 5, 5, 0, 0, 0, 2, 6, 0, 0, 0, 9, 8, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![259315, -104440, 7123, 31464, 123878, 122320, -16989, 138677, -16989, -25682, 4498, -4532, 12374, -72791, 60220, -12729, 2633, -1426, -6302, 68809, 28809, 50400, 8789, -18949, -5637, 12999, -6598, 2095, -2619, -11414, 6407].span()
};
    let tree_60 = xgb_inference::Tree {
    base_weights: array![-175, 11765, -1837, 24551, -19524, -28938, 556, 36602, -1745, -12326, 3103, 2737, -40054, 29458, -1655, -993, 47091, -14723, -3823, 16575, -587, -14962, 1247, 17402, 3126, -25766, 9939, 9694, -6730, -472, -16736, 841, 15136, 1066, -6817].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 0, 0, 0, 17, 19, 21, 0, 23, 0, 0, 0, 0, 25, 27, 0, 0, 29, 0, 31, 33, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 0, 0, 0, 18, 20, 22, 0, 24, 0, 0, 0, 0, 26, 28, 0, 0, 30, 0, 32, 34, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 6, 4, 9, 3, 1, 4, 4, 0, 0, 0, 0, 6, 9, 0, 0, 8, 0, 0, 0, 0, 4, 3, 0, 0, 2, 0, 2, 7, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-127341, 43136, -87088, 131589, 48164, -98199, -56421, -196791, -1745, -12326, 3103, 2737, 7607, 19277, -163359, -993, 88123, -14723, -3823, 16575, -587, 57071, -46696, 17402, 3126, 53376, 9939, 88968, 12459, -472, -16736, 841, 15136, 1066, -6817].span()
};
    let tree_61 = xgb_inference::Tree {
    base_weights: array![57, -1853, 8689, 123, -20763, 15583, -13723, -1966, 29126, -34786, 1825, -1432, 36625, -9308, 3848, 1072, -30470, -1646, 16183, -13468, -1910, 17383, -24701, 2189, 14769, 3082, -11478, 1200, -15318, 9899, 2014, -14401, 2454, 1693, -6966, 8829, -8523].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 0, 21, 23, 0, 0, 25, 27, 0, 0, 0, 0, 29, 31, 0, 0, 33, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 0, 22, 24, 0, 0, 26, 28, 0, 0, 0, 0, 30, 32, 0, 0, 34, 0, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 6, 4, 6, 6, 6, 1, 3, 4, 2, 0, 6, 1, 0, 0, 6, 6, 0, 0, 0, 0, 5, 5, 0, 0, 7, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![74821, 102518, 82339, 80090, 150139, 4695, 43917, 25331, 33469, 83007, 1825, -41569, 669, -9308, 3848, 74190, 16555, -1646, 16183, -13468, -1910, -75849, -24586, 2189, 14769, 140185, -11478, 1200, -15318, 9899, 29727, -14401, 2454, 1693, -6966, 8829, -8523].span()
};
    let tree_62 = xgb_inference::Tree {
    base_weights: array![-246, -2153, 12288, 789, -20048, 20488, -7439, -2190, 19841, -32662, 14946, -5965, 31850, 11298, -4146, 34173, -10067, -46203, 6760, 10657, -3780, 6944, -9289, 43916, 6878, -8370, 12152, -1550, 43125, -23816, -19609, 4725, 16149, 6531, -3228, 225, -5685, 13358, -1599, 1163, 16259, 45, -11801].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 15, 17, 19, 21, 23, 0, 25, 27, 0, 29, 0, 0, 0, 0, 0, 31, 33, 35, 37, 0, 39, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 16, 18, 20, 22, 24, 0, 26, 28, 0, 30, 0, 0, 0, 0, 0, 32, 34, 36, 38, 0, 40, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 8, 0, 8, 6, 8, 0, 0, 2, 1, 1, 8, 7, 0, 2, 5, 0, 2, 0, 0, 0, 0, 0, 9, 6, 4, 6, 0, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![122320, 82525, 74297, 44043, 37162, 82525, -7439, -173625, 94896, 112750, 10653, 30836, 180740, 11298, 88968, -52906, -10067, 21940, 6760, 10657, -3780, 6944, -9289, 1753, -27920, 34445, -1037, -1550, -61113, 57126, -19609, 4725, 16149, 6531, -3228, 225, -5685, 13358, -1599, 1163, 16259, 45, -11801].span()
};
    let tree_63 = xgb_inference::Tree {
    base_weights: array![128, -703, 6731, -11786, 1279, -27800, 15351, 3199, -19375, -41866, 4570, -4189, 13100, -769, 20559, 3430, -31694, -477, -18556, 3071, -27349, 41580, 3585, -2951, -12060, -206, 8876, -14545, 3390, 864, 15727, 6514, -9471].span(),
    left_children: array![1, 3, 0, 5, 7, 9, 11, 13, 15, 17, 0, 0, 0, 19, 21, 0, 23, 0, 0, 25, 27, 29, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 0, 6, 8, 10, 12, 14, 16, 18, 0, 0, 0, 20, 22, 0, 24, 0, 0, 26, 28, 30, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 2, 0, 6, 0, 7, 5, 1, 6, 5, 0, 0, 0, 1, 6, 0, 5, 0, 0, 1, 6, 6, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![259315, -91897, 6731, 31464, 102918, 70673, -16989, 40342, -67376, -18405, 4570, -4189, 13100, 28809, -2997, 3430, -25682, -477, -18556, 15477, 52024, -74429, -1377, -2951, -12060, -206, 8876, -14545, 3390, 864, 15727, 6514, -9471].span()
};
    let tree_64 = xgb_inference::Tree {
    base_weights: array![92, 16123, -964, 11447, -4595, -17401, 678, -3970, 1944, 993, -27884, 8654, -267, 325, -13288, -2771, 11660, -749, -13012, 16092, 661, -1447, 5776, 5108, -4708].span(),
    left_children: array![1, 3, 5, 0, 7, 9, 11, 0, 0, 0, 13, 0, 15, 0, 0, 17, 19, 21, 0, 0, 23, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 8, 10, 12, 0, 0, 0, 14, 0, 16, 0, 0, 18, 20, 22, 0, 0, 24, 0, 0, 0, 0].span(),
    split_indices: array![2, 1, 2, 0, 5, 2, 2, 0, 0, 0, 0, 0, 4, 0, 0, 4, 1, 5, 0, 0, 7, 0, 0, 0, 0].span(),
    split_conditions: array![-164039, 15477, -104440, 11447, -24586, -135148, -98811, -3970, 1944, 993, 38397, 8654, 66525, 325, -13288, 63811, -24215, 92876, -13012, 16092, -7654, -1447, 5776, 5108, -4708].span()
};
    let tree_65 = xgb_inference::Tree {
    base_weights: array![272, -2455, 5753, 34, -35926, 31578, 765, -1726, 9102, -1136, -14671, 11594, 1966, 9574, -3765, 2268, -20714, -21226, 9213, -3031, 18411, -40539, 10827, 4846, -30147, 37081, -1650, -5127, 2090, 8975, -11095, -20917, -1626, -5342, 10383, 275, -12675, 1806, 15812, 6798, -5683].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 0, 0, 0, 0, 0, 17, 19, 21, 23, 25, 27, 29, 31, 33, 0, 35, 37, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 0, 0, 0, 0, 0, 18, 20, 22, 24, 26, 28, 30, 32, 34, 0, 36, 38, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 3, 3, 3, 4, 5, 1, 3, 0, 0, 0, 0, 0, 0, 1, 3, 2, 2, 1, 1, 0, 8, 0, 0, 9, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-16355, -24256, 1730, -29159, -6265, 1449, -119612, -38413, 9102, -1136, -14671, 11594, 1966, 9574, 12493, -51056, 98221, -137788, 30867, -72216, 76878, -29009, -101887, 4846, -107815, -22371, -24907, -5127, 2090, 8975, -11095, -20917, -1626, -5342, 10383, 275, -12675, 1806, 15812, 6798, -5683].span()
};
    let tree_66 = xgb_inference::Tree {
    base_weights: array![242, 4063, -4387, 893, 30655, -33084, 988, 3488, -8962, 16127, -4694, -48418, -903, 18899, -4731, 10986, -7276, -19501, -1790, 16930, 1899, -26713, 1359, -9977, 18652, -13325, 9261, -6856, 18292, -47610, 5139, 23410, -7986, -12281, 5281, -1463, 9718, 580, -9871, 10907, -3735, -1849, -19335, 12230, -2031, -9209, 2285].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 0, 0, 17, 0, 19, 21, 23, 25, 0, 0, 0, 27, 29, 31, 33, 35, 37, 0, 0, 39, 41, 0, 43, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 0, 0, 18, 0, 20, 22, 24, 26, 0, 0, 0, 28, 30, 32, 34, 36, 38, 0, 0, 40, 42, 0, 44, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 4, 4, 4, 2, 2, 5, 6, 0, 0, 0, 7, 0, 3, 4, 3, 5, 0, 0, 0, 3, 3, 1, 1, 5, 8, 0, 0, 4, 4, 0, 2, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![35671, 30379, 43608, 25260, 42970, 39161, -43788, 23293, -8962, 16127, -4694, -9652, -903, -53831, 50575, -89890, 47146, -19501, -1790, 16930, -43467, -45211, -15361, -21295, -35736, 5640, 9261, -6856, 63811, 48143, 5139, 68885, -116911, -12281, 5281, -1463, 9718, 580, -9871, 10907, -3735, -1849, -19335, 12230, -2031, -9209, 2285].span()
};
    let tree_67 = xgb_inference::Tree {
    base_weights: array![-32, -1212, 16920, -164, -7811, -1333, 10077, 5311, -4623, 4852, -5557, 36181, 1178, -29749, -979, 1167, 14767, -16556, 12373, -41214, 1329, -4026, 11328, -9154, 3565, -2616, 6715, -15599, -2391, 840, -10608].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 0, 11, 13, 0, 0, 15, 17, 19, 21, 0, 0, 23, 25, 27, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 0, 12, 14, 0, 0, 16, 18, 20, 22, 0, 0, 24, 26, 28, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 4, 6, 2, 0, 4, 0, 8, 2, 0, 0, 8, 8, 6, 5, 0, 0, 6, 5, 8, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![138213, 116566, 47628, 695, -7811, 175044, 10077, -143067, 13958, 4852, -5557, -176062, -20374, 10363, 180092, 1167, 14767, 37162, -28817, 3511, 1329, 67613, 11328, -9154, 3565, -2616, 6715, -15599, -2391, 840, -10608].span()
};
    let tree_68 = xgb_inference::Tree {
    base_weights: array![-9, 5936, -945, 18454, -2211, 11320, -3726, -19721, -335, -33324, 4874, -18057, 2242, -15352, 2653, -2084, -35542, 22303, -815, 5917, -5049, -12816, -3310, -9179, 12192, 6206, -1372].span(),
    left_children: array![1, 0, 3, 5, 7, 0, 0, 9, 11, 13, 0, 15, 17, 0, 0, 19, 21, 23, 25, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 0, 4, 6, 8, 0, 0, 10, 12, 14, 0, 16, 18, 0, 0, 20, 22, 24, 26, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 0, 1, 3, 0, 0, 0, 3, 6, 5, 0, 6, 6, 0, 0, 4, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-115718, 5936, -141278, -38744, -166730, 11320, -3726, -17526, -101681, 68554, 4874, -127729, -61113, -15352, 2653, 34445, 46602, -33490, -113519, 5917, -5049, -12816, -3310, -9179, 12192, 6206, -1372].span()
};
    let tree_69 = xgb_inference::Tree {
    base_weights: array![-34, 1484, -11190, -282, 32620, -24398, 7254, 1161, -9356, 21, 14561, 3083, -38235, 8950, -5840, 2927, -21426, -14179, -3515, -208, 16591, -5361, -10454, 930, -7562, -1507, 7337, -8977, 6615].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 0, 0, 0, 17, 0, 0, 19, 21, 0, 0, 23, 25, 27, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 0, 0, 0, 18, 0, 0, 20, 22, 0, 0, 24, 26, 28, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 9, 0, 3, 5, 8, 9, 0, 0, 0, 0, 5, 0, 0, 0, 7, 0, 0, 0, 9, 5, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![98160, 93989, 110336, 89128, 9691, -27607, -4380, 147231, -9356, 21, 14561, 3083, 40377, 8950, -5840, 48097, 26226, -14179, -3515, 42817, -79014, -49023, -10454, 930, -7562, -1507, 7337, -8977, 6615].span()
};
    let tree_70 = xgb_inference::Tree {
    base_weights: array![-335, 17254, -1300, 12932, -3398, -23428, 166, -13218, 4343, 19041, -1410, 42751, -5889, 1831, -12095, 15388, 3787, -9703, 3803, -1306, -26421, 2441, -2286, -8362, 2817, -12238, 3811].span(),
    left_children: array![1, 3, 5, 0, 0, 7, 9, 0, 0, 11, 13, 15, 0, 17, 19, 0, 0, 0, 21, 23, 25, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 0, 8, 10, 0, 0, 12, 14, 16, 0, 18, 20, 0, 0, 0, 22, 24, 26, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![5, 3, 5, 0, 0, 6, 5, 0, 0, 6, 8, 0, 0, 5, 2, 0, 0, 0, 6, 5, 8, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-181716, -74738, -130168, 12932, -3398, -15561, -88407, -13218, 4343, 35728, 70952, 42732, -5889, -70803, 42970, 15388, 3787, -9703, 50770, -26725, 154113, 2441, -2286, -8362, 2817, -12238, 3811].span()
};
    let tree_71 = xgb_inference::Tree {
    base_weights: array![-393, -1438, 14720, 2278, -6453, -723, 9087, -580, 26577, -31456, -1043, 21731, -3558, 13696, -3032, -42929, 321, -10219, 2788, -1111, 13562, -19415, 3974, -17247, -1231, 21528, -3911, -1147, -11354, -1749, 5375, 14184, 1098, -8639, 943].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 13, 15, 17, 19, 21, 0, 0, 23, 0, 0, 25, 0, 0, 27, 29, 0, 0, 31, 33, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 14, 16, 18, 20, 22, 0, 0, 24, 0, 0, 26, 0, 0, 28, 30, 0, 0, 32, 34, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 4, 6, 4, 4, 0, 0, 5, 2, 2, 2, 6, 7, 0, 0, 7, 0, 0, 5, 0, 0, 7, 1, 0, 0, 3, 5, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![138213, 35671, 47628, 30379, 43608, -723, 9087, -118940, 42970, 63424, -84140, -20101, -36517, 13696, -3032, -9652, 321, -10219, -43788, -1111, 13562, -67088, 8740, -17247, -1231, -51401, -20200, -1147, -11354, -1749, 5375, 14184, 1098, -8639, 943].span()
};
    let tree_72 = xgb_inference::Tree {
    base_weights: array![-250, -1988, 10364, 2054, -9548, -4573, 34452, 22010, -2222, -15665, 9127, 6749, -15320, -395, 16467, 4824, 14639, 8133, -16072, 5307, -22828, -5554, 22153, -26801, 4928, -7259, 21777, 1588, 13224, -24769, 7647, 22344, -4969, -31669, 2828, 11478, -3255, 1138, -39872, -2284, 10979, -5105, 4078, -15279, -2633, -1341, 11486, -4180, -17541, -6544, 10141, -14379, -3805].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 0, 23, 0, 0, 25, 0, 27, 29, 31, 33, 0, 35, 37, 0, 0, 39, 41, 0, 43, 0, 45, 0, 47, 49, 0, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 0, 24, 0, 0, 26, 0, 28, 30, 32, 34, 0, 36, 38, 0, 0, 40, 42, 0, 44, 0, 46, 0, 48, 50, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 0, 6, 8, 2, 5, 1, 8, 2, 6, 8, 0, 5, 0, 0, 3, 0, 2, 9, 5, 6, 0, 8, 4, 0, 0, 1, 8, 0, 8, 0, 8, 0, 4, 4, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![100018, 44249, 5180, -79492, 80427, -75849, 9481, -109113, 34651, -65668, -97722, 6749, 29380, -395, 16467, -72825, 14639, 20417, 73747, 4328, 55021, -5554, 5640, -166332, 4928, -7259, -99288, -20374, 13224, -22943, 7647, -52798, -4969, 35888, 23331, 11478, -3255, 1138, 19437, -2284, 10979, -5105, 4078, -15279, -2633, -1341, 11486, -4180, -17541, -6544, 10141, -14379, -3805].span()
};
    let tree_73 = xgb_inference::Tree {
    base_weights: array![117, 2567, -6182, -104, 29582, 11387, -20554, 7600, -7399, 306, 13983, -4788, 18635, -52716, -1170, -15848, 16221, -1826, -39287, 5546, 11357, -3202, -19256, 20241, -14233, 7101, -28520, -9608, 28293, -11406, 18052, 809, -17719, 10261, -16387, 853, 8463, -9788, 4130, -1378, -14752, -8312, 8536, -3192, 11574, 2949, -8249, 10230, -5265, 631, -9277, -6582, 7187].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 0, 0, 19, 21, 23, 25, 27, 29, 31, 33, 0, 0, 0, 35, 37, 0, 39, 41, 43, 45, 47, 0, 0, 0, 49, 0, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 0, 0, 20, 22, 24, 26, 28, 30, 32, 34, 0, 0, 0, 36, 38, 0, 40, 42, 44, 46, 48, 0, 0, 0, 50, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 7, 2, 1, 2, 9, 7, 7, 5, 0, 0, 0, 2, 5, 7, 6, 6, 5, 7, 2, 0, 0, 0, 9, 2, 0, 7, 5, 2, 4, 0, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![48813, 35366, -9558, -3210, -9558, -121602, 81225, -76766, 82202, 306, 13983, -4788, -35505, -15328, 111549, -117181, -27920, -8287, -77291, -124683, 11357, -3202, -19256, -29845, 54777, 7101, -113833, 89721, -57035, 951, 96176, 809, -17719, 10261, 19218, 853, 8463, -9788, 137049, -1378, -14752, -8312, 8536, -3192, 11574, 2949, -8249, 10230, -5265, 631, -9277, -6582, 7187].span()
};
    let tree_74 = xgb_inference::Tree {
    base_weights: array![-223, 1241, -11086, -35, 8164, -31035, 4958, 15482, -1735, -11493, -2519, -5902, 20113, 10019, -1509, 7243, -6369, -1679, 10145, -7831, 8575, 25580, 1072, -28851, -2588, -3, 11590, -10023, 3599, -13701, 614, -2219, 7117].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 15, 0, 0, 0, 17, 0, 19, 21, 23, 0, 0, 0, 0, 25, 27, 29, 31, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 16, 0, 0, 0, 18, 0, 20, 22, 24, 0, 0, 0, 0, 26, 28, 30, 32, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 9, 5, 3, 0, 9, 9, 9, 5, 0, 0, 0, 4, 0, 0, 6, 5, 0, 0, 0, 0, 1, 6, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![138677, 127530, -41153, -94055, 8164, 169559, 151785, -14501, -24907, -11493, -2519, -5902, -51113, 10019, 43126, -57743, -18896, -1679, 10145, -7831, 8575, -10796, -15561, -18657, 93041, -3, 11590, -10023, 3599, -13701, 614, -2219, 7117].span()
};
    let tree_75 = xgb_inference::Tree {
    base_weights: array![-86, 3415, -4706, 9056, -12441, 2372, -25992, 27611, 877, -28733, 4365, 23428, -6687, -42118, 7670, -5650, 46830, -28735, 6726, -36401, 77, 22913, -14557, -3975, 47563, 5884, -20212, -1094, -51224, 6521, -7258, 16866, 1342, -14613, 1657, -17536, 13558, -16789, -3153, 10010, 842, 2588, -9472, 4584, -7821, 4608, 17331, 16643, -7494, -31780, 3569, -17932, -3549, 5684, -13396, -8846, 5925, 9565, -3303, 724, -14070].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 0, 29, 31, 33, 35, 37, 0, 39, 41, 43, 45, 47, 49, 0, 51, 0, 0, 0, 0, 0, 0, 53, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 0, 30, 32, 34, 36, 38, 0, 40, 42, 44, 46, 48, 50, 0, 52, 0, 0, 0, 0, 0, 0, 54, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![7, 0, 6, 4, 1, 8, 7, 7, 4, 2, 1, 6, 3, 2, 0, 2, 8, 0, 8, 9, 0, 8, 9, 4, 9, 7, 7, 0, 9, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![5647, 67011, 49366, -10923, 102294, 18016, 137049, -38897, 4420, 93529, 156909, -15561, -39733, -31499, 7670, -50816, 4052, -85650, -109113, -2439, 77, -120988, 27736, 50142, -83887, 139132, 143332, -1094, 5197, 6521, -7258, 16866, 1342, -14613, 1657, 17180, -107662, -16789, -3153, 10010, 842, 2588, -9472, 4584, -7821, 4608, 17331, 79061, -7494, -72791, 3569, -17932, -3549, 5684, -13396, -8846, 5925, 9565, -3303, 724, -14070].span()
};
    let tree_76 = xgb_inference::Tree {
    base_weights: array![-578, -1637, 14239, -719, -7126, 240, 7970, 2128, -8748, 88, 10313, 3984, -22820, 3991, -17179, -10018, 13796, -38128, 5500, 2265, -6985, 4913, -7792, 11080, -1324, -14206, -337].span(),
    left_children: array![1, 3, 5, 7, 0, 0, 0, 9, 11, 13, 0, 15, 17, 19, 21, 0, 23, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 0, 0, 10, 12, 14, 0, 16, 18, 20, 22, 0, 24, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 4, 2, 6, 0, 0, 0, 4, 7, 8, 0, 7, 7, 2, 2, 0, 3, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![136891, 116566, 2138, 46747, -7126, 240, 7970, 87532, -4396, 107124, 10313, -143834, 129984, 126405, -103264, -10018, -35732, 51413, 5500, 2265, -6985, 4913, -7792, 11080, -1324, -14206, -337].span()
};
    let tree_77 = xgb_inference::Tree {
    base_weights: array![-522, -2661, 7782, -809, -22464, 35363, -2756, 3904, -9504, -13629, 235, 14733, 1878, -10131, 6007, -20812, 7474, 5797, -13884, 28283, -10184, -10252, 971, 21188, -3348, -21146, 11234, -805, 12389, -12206, 9192, 8828, -3325, -5012, 4432, -9049, 1625, 9642, -3202, -3295, 7147].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 0, 0, 0, 0, 19, 21, 23, 0, 25, 27, 29, 0, 0, 31, 33, 35, 37, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 0, 0, 0, 0, 20, 22, 24, 0, 26, 28, 30, 0, 0, 32, 34, 36, 38, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 2, 2, 9, 2, 8, 1, 4, 5, 0, 0, 0, 0, 0, 0, 9, 4, 0, 7, 7, 1, 0, 0, 1, 8, 1, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![88968, 73861, 100943, 43682, 80427, 28156, -139119, -87088, -157826, -13629, 235, 14733, 1878, -10131, 25034, -2439, 35671, 5797, 101657, -74072, 10360, -10252, 971, 36159, -6052, 99607, 44249, -805, 12389, -12206, -19617, 8828, -3325, -5012, 4432, -9049, 1625, 9642, -3202, -3295, 7147].span()
};
    let tree_78 = xgb_inference::Tree {
    base_weights: array![-420, 6239, -3369, 14839, -7969, 16644, -6444, 29110, -5911, -15722, 4664, 37593, -8846, -16884, 1270, -862, 35213, -17894, 9865, 2265, -24461, 13344, 3512, -7512, 3710, -37764, -1529, 23117, -5204, 822, 42390, -9871, 1299, -759, 5190, -32359, 525, -3067, -47585, 15066, -19785, -4061, 37550, -25670, 12115, 15688, 2553, -14537, -1688, -17953, -5018, 10173, -6874, -11883, 2846, 14848, 2431, 667, -11488, -6088, 6854].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 0, 21, 23, 25, 27, 0, 29, 31, 33, 0, 35, 0, 0, 0, 0, 37, 39, 41, 43, 0, 45, 0, 0, 0, 0, 47, 0, 0, 49, 51, 53, 0, 55, 57, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 0, 22, 24, 26, 28, 0, 30, 32, 34, 0, 36, 0, 0, 0, 0, 38, 40, 42, 44, 0, 46, 0, 0, 0, 0, 48, 0, 0, 50, 52, 54, 0, 56, 58, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![8, 0, 7, 4, 5, 2, 3, 0, 1, 3, 0, 6, 7, 8, 0, 0, 6, 6, 0, 0, 9, 0, 0, 0, 0, 2, 5, 1, 0, 0, 3, 0, 0, 0, 0, 6, 0, 0, 9, 3, 3, 0, 6, 8, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-41761, 46185, -55300, 50142, 38893, 45410, -51056, -172322, 6457, -63944, 4664, 15653, -96325, 3511, -111129, -862, -90613, -15561, 36534, 2265, 96072, 13344, 3512, -7512, 3710, -41640, 61264, -141124, 38640, 822, -18885, -9871, 1299, -759, 5190, 11541, 525, -3067, 10916, -68238, -70295, -4061, 35728, 4052, -20207, 15688, 2553, -14537, -1688, -17953, -5018, 10173, -6874, -11883, 2846, 14848, 2431, 667, -11488, -6088, 6854].span()
};
    let tree_79 = xgb_inference::Tree {
    base_weights: array![-486, -2638, 9281, -12244, 954, 17098, -8393, -13346, -2409, -2585, 23445, -3378, 27220, -9827, 5028, -10902, 8865, 18208, -6821, -543, 34307, -1850, 39948, 28449, -10464, 32175, -2316, -32810, -1416, 15286, -482, 3179, 13761, -1249, 14391, 5886, -12097, 756, 13371, -402, -13205, 9316, -1811].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 0, 15, 17, 19, 0, 21, 0, 0, 0, 23, 25, 27, 0, 29, 0, 31, 33, 35, 37, 0, 39, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 0, 16, 18, 20, 0, 22, 0, 0, 0, 24, 26, 28, 0, 30, 0, 32, 34, 36, 38, 0, 40, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 2, 8, 6, 5, 9, 3, 0, 9, 9, 3, 0, 2, 0, 0, 0, 9, 2, 9, 0, 8, 0, 8, 7, 2, 9, 0, 7, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![74821, -36681, 82525, -58755, 139084, -113380, 162926, -13346, -116911, -115078, -79385, -3378, -104440, -9827, 5028, -10902, 14608, 83854, -87878, -543, 123768, -1850, -101942, -20665, -76420, -127263, -2316, -27656, -63197, 15286, -482, 3179, 13761, -1249, 14391, 5886, -12097, 756, 13371, -402, -13205, 9316, -1811].span()
};
    let tree_80 = xgb_inference::Tree {
    base_weights: array![-144, 1694, -13314, -264, 10546, 2940, -24713, 15488, -1701, -4756, 6038, 332, -33830, 8747, -3124, -16901, 940, -1860, -13452, -41162, 13477, 7707, -8845, 3090, -20120, 10391, -4464, -8613, 3630, -5402, 5777].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 15, 0, 0, 0, 17, 0, 0, 19, 21, 0, 0, 23, 25, 27, 29, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 16, 0, 0, 0, 18, 0, 0, 20, 22, 0, 0, 24, 26, 28, 30, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 5, 1, 0, 5, 7, 8, 0, 0, 0, 0, 3, 0, 0, 3, 7, 0, 0, 3, 2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![98160, 93989, -18156, -141278, 10546, -54634, -131150, 30836, -163359, -4756, 6038, 332, -31942, 8747, -3124, -57546, 12459, -1860, -13452, -80695, 4854, -116010, 51420, 3090, -20120, 10391, -4464, -8613, 3630, -5402, 5777].span()
};
    let tree_81 = xgb_inference::Tree {
    base_weights: array![-388, 15301, -1524, 9338, -715, -15817, 501, -23771, 3017, 2320, -18233, -382, -32985, 23686, 581, -8859, -178, -3113, -11390, -1088, 12044, -3557, 11787, 286, -9404, 8516, -965].span(),
    left_children: array![1, 3, 5, 0, 0, 7, 9, 11, 0, 13, 15, 0, 17, 19, 21, 0, 0, 0, 0, 0, 0, 23, 25, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 0, 8, 10, 12, 0, 14, 16, 0, 18, 20, 22, 0, 0, 0, 0, 0, 0, 24, 26, 0, 0, 0, 0].span(),
    split_indices: array![2, 1, 2, 0, 0, 6, 0, 2, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 6, 0, 0, 0, 0].span(),
    split_conditions: array![-164039, 15477, -91897, 9338, -715, 56293, 102918, -131374, 3017, -72791, 111601, -382, -16655, 32669, 50157, -8859, -178, -3113, -11390, -1088, 12044, 28809, -2997, 286, -9404, 8516, -965].span()
};
    let tree_82 = xgb_inference::Tree {
    base_weights: array![-327, -1410, 14251, 660, -9299, 8143, -505, -1265, 7993, -17506, 6757, 8694, -2839, 4139, -26341, -23078, -178, -32177, 960, -11994, 4931, 12425, -1388, -12098, 1007].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 0, 13, 0, 0, 15, 0, 17, 19, 21, 23, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 0, 14, 0, 0, 16, 0, 18, 20, 22, 24, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 5, 1, 5, 6, 0, 0, 0, 0, 6, 0, 0, 3, 0, 7, 8, 3, 1, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![136891, 63766, 24997, 53881, 28576, 8143, -505, -173625, 7993, -191611, 6757, 8694, -89890, 4139, 113166, 3511, -76215, 106462, 960, -11994, 4931, 12425, -1388, -12098, 1007].span()
};
    let tree_83 = xgb_inference::Tree {
    base_weights: array![316, -1881, 7679, -118, -10675, 13225, -5605, -3844, 13560, 1037, 25436, -190, -25310, -2645, 27427, -9366, 14443, 42084, -1391, 8754, -9663, -34668, 1305, -10420, 22242, 12847, -1258, 26795, -2916, 15044, 3680, 580, 10509, -5838, 4316, -13992, -3141, 13408, -2985, 11847, 1863].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 0, 11, 13, 15, 17, 19, 21, 23, 25, 0, 27, 29, 0, 31, 33, 35, 0, 0, 37, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 0, 12, 14, 16, 18, 20, 22, 24, 26, 0, 28, 30, 0, 32, 34, 36, 0, 0, 38, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 3, 5, 2, 0, 4, 0, 6, 1, 9, 4, 4, 6, 4, 4, 0, 9, 7, 0, 6, 4, 8, 0, 0, 2, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![40588, 25331, 47146, 88968, -10675, -98889, -5605, 74190, -16655, -6302, 82339, 34445, 144273, 38210, 59061, -9366, 140871, 12459, -1391, 44554, 66525, -25497, 1305, -10420, 130494, 12847, -1258, -62305, -2916, 15044, 3680, 580, 10509, -5838, 4316, -13992, -3141, 13408, -2985, 11847, 1863].span()
};
    let tree_84 = xgb_inference::Tree {
    base_weights: array![401, 3868, -4574, -16237, 6434, -35303, 534, 3166, -12626, -5958, 13902, -16723, 1202, 7001, -2992, 20592, -16801, 26872, -1146, -19633, 4559, 11659, -837, 6774, -31154, 44359, -1607, -8626, 8535, -4563, -12147, 23422, -3938, -4464, 7306, -707, -13247, 16584, -758, -8290, 7394, 2842, -7333, -6044, 5909, 14294, -1763, -5915, 2496].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 0, 0, 15, 17, 0, 0, 0, 19, 21, 23, 25, 27, 29, 31, 0, 0, 33, 35, 37, 39, 41, 0, 43, 0, 45, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 0, 0, 16, 18, 0, 0, 0, 20, 22, 24, 26, 28, 30, 32, 0, 0, 34, 36, 38, 40, 42, 0, 44, 0, 46, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![8, 5, 8, 3, 3, 4, 8, 0, 0, 6, 1, 0, 0, 0, 1, 9, 8, 6, 9, 0, 3, 0, 0, 2, 2, 3, 6, 4, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![17500, -134448, 26890, -51401, -51056, 4577, 34215, 3166, -12626, -93280, 21752, -16723, 1202, 7001, -31975, -29596, -41761, 46747, 110336, -144877, -65854, 11659, -837, 19633, -41640, 101825, 80090, 33469, 8535, -167132, -12147, 45422, 44375, -4464, 7306, -707, -13247, 16584, -758, -8290, 7394, 2842, -7333, -6044, 5909, 14294, -1763, -5915, 2496].span()
};
    let tree_85 = xgb_inference::Tree {
    base_weights: array![262, -978, 16074, 3616, -5050, 7439, 889, 6580, -7030, -26866, -606, 864, 13069, -41023, 1271, 6864, -3847, 5411, -9630, -14868, -3581, -851, -8616, -463, 7636, -1330, 9506].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 0, 13, 15, 17, 0, 19, 0, 0, 21, 23, 0, 0, 0, 25, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 0, 14, 16, 18, 0, 20, 0, 0, 22, 24, 0, 0, 0, 26, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 2, 1, 5, 2, 0, 0, 5, 0, 7, 2, 5, 0, 6, 0, 0, 6, 2, 0, 0, 0, 6, 0, 0, 0, 0, 0].span(),
    split_conditions: array![136891, 4854, 24997, 208067, 20894, 7439, 889, 70958, -7030, 33429, 29133, 47569, 13069, -22161, 1271, 6864, 123878, -19603, -9630, -14868, -3581, 88435, -8616, -463, 7636, -1330, 9506].span()
};
    let tree_86 = xgb_inference::Tree {
    base_weights: array![214, 12530, -1100, -4388, 26389, -16085, 863, 1206, 10523, 994, -9434, 31538, -2005, -4190, 3766, 2804, 11159, 2280, -13533, -98, 10155, -38074, -1803, -5010, 1214, 507, -17090, -8668, 3097].span(),
    left_children: array![1, 3, 5, 0, 7, 9, 11, 0, 0, 13, 0, 15, 17, 0, 0, 0, 0, 19, 21, 23, 0, 25, 27, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 8, 10, 12, 0, 0, 14, 0, 16, 18, 0, 0, 0, 0, 20, 22, 24, 0, 26, 28, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 5, 6, 0, 2, 1, 6, 0, 0, 9, 0, 3, 7, 0, 0, 0, 0, 7, 7, 2, 0, 5, 3, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-96655, -31693, -109742, -4388, -43934, -15361, -81192, 1206, 10523, -44281, -9434, -66703, 54148, -4190, 3766, 2804, 11159, 44375, 81225, -67217, 10155, -22855, -55351, -5010, 1214, 507, -17090, -8668, 3097].span()
};
    let tree_87 = xgb_inference::Tree {
    base_weights: array![46, 16428, -1197, -914, 7542, 2309, -7518, -2161, 22425, -24752, 628, 1252, -9874, 38918, -7862, 2690, -38890, -10641, 8874, 20124, -4698, 922, 14720, -309, -15359, 10815, 1421, 9180, -2869, 7285, -2296, 7822, -1767].span(),
    left_children: array![1, 3, 5, 0, 0, 7, 9, 11, 13, 15, 17, 19, 0, 21, 0, 0, 23, 0, 25, 27, 29, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 0, 8, 10, 12, 14, 16, 18, 20, 0, 22, 0, 0, 24, 0, 26, 28, 30, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![2, 6, 9, 0, 0, 9, 9, 9, 7, 3, 8, 6, 0, 3, 0, 0, 4, 0, 8, 5, 7, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-164039, -58755, 35655, -914, 7542, -6302, 79893, -17068, 54148, -66297, -109989, -38008, -9874, -70295, -7862, 2690, -106207, -10641, -41761, 208067, -131150, 922, 14720, -309, -15359, 10815, -55300, 9180, -2869, 7285, -2296, 7822, -1767].span()
};
    let tree_88 = xgb_inference::Tree {
    base_weights: array![229, -877, 14253, 1634, -7963, 553, 6784, 4260, -14953, 4832, -22157, 2070, 10398, -2354, -9031, 22908, -7403, -33608, 4528, -11911, 6498, -7607, 4441, 9680, 632, -9674, 13150, -12197, -1139, -8417, 398, 3128, -3745, -1602, 8629].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 13, 15, 17, 19, 0, 21, 0, 23, 25, 27, 0, 29, 31, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 14, 16, 18, 20, 0, 22, 0, 24, 26, 28, 0, 30, 32, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 6, 3, 9, 7, 0, 0, 6, 6, 3, 7, 9, 0, 6, 0, 0, 3, 9, 0, 5, 8, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![136891, 48480, 85867, 138677, -4396, 553, 6784, 43897, -1037, -35732, 137049, -94654, 10398, -78476, -9031, 40638, -9638, 43682, 4528, -20200, 121056, -7607, 4441, 9680, 632, -9674, 88435, -12197, -1139, -8417, 398, 3128, -3745, -1602, 8629].span()
};
    let tree_89 = xgb_inference::Tree {
    base_weights: array![61, 5126, -745, -1678, 4525, 2280, -8198, -486, 22844, -15251, 4829, 15455, -4386, -1222, 13213, 4684, -26294, -7432, 19855, 8892, -1369, -306, -8574, 5068, -5507, -10684, 708, -4273, 10943].span(),
    left_children: array![1, 0, 3, 5, 0, 7, 9, 11, 13, 15, 17, 19, 21, 0, 0, 23, 25, 0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 0, 4, 6, 0, 8, 10, 12, 14, 16, 18, 20, 22, 0, 0, 24, 26, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 0, 8, 9, 0, 9, 4, 5, 0, 4, 6, 1, 9, 0, 0, 3, 9, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-119524, 5126, 184107, 24003, 4525, -598, 5289, -43788, 48097, -127341, -94536, 24997, -18364, -1222, 13213, 175087, 140871, -7432, -65300, 8892, -1369, -306, -8574, 5068, -5507, -10684, 708, -4273, 10943].span()
};
    let tree_90 = xgb_inference::Tree {
    base_weights: array![243, 4124, -3365, -165, 28063, -11489, 1086, -18757, 4838, 1855, 12557, 15897, -4466, 364, -28937, 14146, -9845, -4566, 31204, 5482, -14934, -1087, -11782, 5043, 30405, -25123, 14551, 4649, 15105, -13304, 26433, -32007, 5957, 6819, -3525, 0, 13270, -11095, -602, -2198, 10091, -2990, 4998, 440, -10708, -2427, 12921, 39, -13473, 6020, -2067].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 0, 0, 17, 19, 0, 21, 23, 25, 0, 27, 29, 31, 0, 0, 33, 35, 37, 39, 41, 0, 43, 45, 47, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 0, 0, 18, 20, 0, 22, 24, 26, 0, 28, 30, 32, 0, 0, 34, 36, 38, 40, 42, 0, 44, 46, 48, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 1, 1, 7, 2, 0, 6, 7, 8, 0, 0, 6, 2, 0, 4, 9, 4, 0, 4, 5, 2, 0, 0, 9, 2, 7, 5, 3, 0, 0, 9, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-3210, -13024, 3636, -76766, 50405, -11489, -36873, -131150, 34215, 1855, 12557, -99959, 16996, 364, 42710, 73747, 39683, -4566, -13255, -15328, 80427, -1087, -11782, -28145, -19603, 78322, 139084, 37583, 15105, 67011, -115078, 4577, 111625, 6819, -3525, 0, 13270, -11095, -602, -2198, 10091, -2990, 4998, 440, -10708, -2427, 12921, 39, -13473, 6020, -2067].span()
};
    let tree_91 = xgb_inference::Tree {
    base_weights: array![334, 11854, -1139, 21429, -3073, -3556, 8654, 5376, 10350, -14594, -686, 22228, -3860, 4714, -2258, 9217, -12397, -5807, 11200, 10038, -252, -11809, 13209, 33277, -7678, -660, -31862, 25185, -2612, 24645, -2355, 14720, 61, -1749, 7283, -507, -13144, -1464, 10642, 7759, -5949, 10412, 666].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 0, 15, 17, 19, 21, 0, 0, 23, 0, 25, 27, 0, 0, 0, 29, 31, 0, 33, 35, 37, 39, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 0, 16, 18, 20, 22, 0, 0, 24, 0, 26, 28, 0, 0, 0, 30, 32, 0, 34, 36, 38, 40, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 2, 4, 2, 0, 3, 7, 4, 0, 5, 5, 3, 7, 0, 0, 3, 0, 5, 3, 0, 0, 0, 0, 1, 0, 5, 6, 1, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-94055, 695, 66306, -43934, -3073, -70295, -11350, -36008, 10350, 35321, 24254, 1730, 20097, 4714, -2258, -76215, -12397, 7561, -41336, 10038, -252, -11809, 39624, -34137, -7678, -11091, 2533, -139253, -109737, 19949, -2355, 14720, 61, -1749, 7283, -507, -13144, -1464, 10642, 7759, -5949, 10412, 666].span()
};
    let tree_92 = xgb_inference::Tree {
    base_weights: array![554, 5544, -620, -8676, 724, 1763, -6388, 253, 19152, 1902, -18663, 6877, 1611, -12, 9832, -9342, 640].span(),
    left_children: array![1, 0, 3, 0, 5, 7, 0, 9, 11, 13, 15, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 0, 4, 0, 6, 8, 0, 10, 12, 14, 16, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![6, 0, 6, 0, 5, 4, 0, 1, 8, 1, 3, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-199574, 5544, -172153, -8676, 211168, 136891, -6388, 148396, -24627, 119188, -18885, 6877, 1611, -12, 9832, -9342, 640].span()
};
    let tree_93 = xgb_inference::Tree {
    base_weights: array![392, 6929, -2392, 860, 28242, -9936, 489, -8240, 6268, 847, 11830, 11009, -5106, 24292, -3220, -5724, 17450, -28481, -802, 10806, 1476, 9115, -24721, -6160, 24977, -838, -12396, -12177, 9825, -3883, 8032, -9254, -1849, -7081, 4411, -1079, 10791, 2373, -7180, -1430, 6042].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 0, 13, 0, 0, 15, 17, 19, 21, 0, 23, 25, 27, 0, 0, 29, 31, 33, 35, 0, 0, 37, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 0, 14, 0, 0, 16, 18, 20, 22, 0, 24, 26, 28, 0, 0, 30, 32, 34, 36, 0, 0, 38, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 3, 3, 7, 4, 0, 0, 0, 8, 0, 0, 5, 0, 9, 5, 0, 2, 6, 6, 0, 0, 8, 5, 3, 1, 0, 0, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-65854, -70295, -58430, -129581, 31531, -9936, 23868, -8240, -42136, 847, 11830, -98379, 33559, -29596, 61264, -5724, -36681, 4136, 11395, 10806, 1476, 3511, 143004, 21189, -139253, -838, -12396, -62367, -18885, -3883, 8032, -9254, -1849, -7081, 4411, -1079, 10791, 2373, -7180, -1430, 6042].span()
};
    let tree_94 = xgb_inference::Tree {
    base_weights: array![17, 5790, -2514, 16665, -3538, -9935, -42, -4445, 13085, 13406, -15276, 13326, -3162, 12839, -8628, -3475, 8699, -29897, 2316, -3159, 23682, 3458, -11810, -5343, 9945, -11024, -2006, -2723, 35725, -7430, 19473, -20431, 10332, 14025, 1969, -6594, 2244, 13325, -1898, -8810, 4772, -1880, 5740].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 0, 15, 17, 19, 21, 23, 0, 0, 0, 25, 0, 0, 27, 29, 31, 0, 0, 0, 0, 0, 33, 35, 37, 39, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 0, 16, 18, 20, 22, 24, 0, 0, 0, 26, 0, 0, 28, 30, 32, 0, 0, 0, 0, 0, 34, 36, 38, 40, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![3, 5, 3, 5, 9, 0, 0, 8, 0, 9, 7, 8, 8, 7, 0, 0, 0, 4, 0, 0, 9, 7, 3, 0, 0, 0, 0, 0, 7, 9, 7, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![-64256, -11997, -58430, -40437, -29596, -9935, -118953, -39498, 13085, -86874, -3676, -31110, 15968, -77291, -8628, -3475, 8699, 2991, 2316, -3159, -44751, -19330, 103793, -5343, 9945, -11024, -2006, -2723, 48813, -52006, 14560, 144800, 32450, 14025, 1969, -6594, 2244, 13325, -1898, -8810, 4772, -1880, 5740].span()
};
    let tree_95 = xgb_inference::Tree {
    base_weights: array![291, -920, 14764, 4671, -1936, 1068, 6320, -6097, -436, 2417, -7965, 18111, -347, 5039, -15501, 948, 9902, 778, -7562, 822, -8046].span(),
    left_children: array![1, 3, 5, 0, 7, 0, 0, 0, 9, 11, 13, 15, 17, 0, 19, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 8, 0, 0, 0, 10, 12, 14, 16, 18, 0, 20, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![4, 5, 3, 0, 5, 0, 0, 0, 6, 4, 9, 4, 7, 0, 7, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![136891, -181716, 85867, 4671, -130168, 1068, 6320, -6097, 46747, -127341, -115827, -164244, 140185, 5039, -25011, 948, 9902, 778, -7562, 822, -8046].span()
};
    let tree_96 = xgb_inference::Tree {
    base_weights: array![378, 3103, -4571, -217, 18577, -7770, 6286, -7579, 2002, 32160, -5625, -24495, -115, 10998, -1365, 13086, 2475, 1041, -33028, -7566, 6184, 14059, -6946, -191, -14775, 14515, -15572, -2169, 7281, -4452, 3214, 8039, -2133, 292, -7256].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 0, 13, 15, 0, 17, 19, 0, 21, 0, 0, 0, 23, 0, 25, 27, 29, 0, 0, 31, 33, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 0, 14, 16, 0, 18, 20, 0, 22, 0, 0, 0, 24, 0, 26, 28, 30, 0, 0, 32, 34, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 9, 5, 4, 7, 9, 0, 0, 4, 9, 0, 4, 8, 0, 7, 0, 0, 0, 3, 0, 8, 5, 8, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![33692, -6302, 143004, -98889, 51132, 79893, 6286, -7579, -49057, 18491, -5625, -106207, -109989, 10998, -47127, 13086, 2475, 1041, -66297, -7566, 104873, -16989, 49590, -191, -14775, -11997, -152312, -2169, 7281, -4452, 3214, 8039, -2133, 292, -7256].span()
};
    let tree_97 = xgb_inference::Tree {
    base_weights: array![297, 1845, -10301, -10, 14502, -8159, 4804, 2838, -11485, 21362, -870, 5406, -2100, 5070, -15777, -18100, 3353, 8969, 382, -4452, 7257, 1097, -7898, -2205, -28756, 10312, 1328, 4013, -4775, -12164, -1768].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 17, 0, 0, 0, 19, 21, 23, 0, 0, 0, 0, 25, 0, 0, 27, 29, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 18, 0, 0, 0, 20, 22, 24, 0, 0, 0, 0, 26, 0, 0, 28, 30, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![9, 9, 5, 9, 6, 0, 2, 5, 5, 5, 0, 0, 0, 4, 7, 3, 0, 0, 0, 0, 4, 0, 0, 7, 8, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![138677, 98366, -41153, 33692, 31800, -8159, 695, 147157, 76234, -11997, -870, 5406, -2100, -91922, -47127, -55351, 3353, 8969, 382, -4452, -50120, 1097, -7898, -23084, -23740, 10312, 1328, 4013, -4775, -12164, -1768].span()
};
    let tree_98 = xgb_inference::Tree {
    base_weights: array![36, -1057, 12940, 12441, -2193, 569, 5966, -1605, 7295, -7515, -810, 4774, -5564, 12822, -95, -10927, -2075, -4569, 2796, 3728, -2541].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 0, 0, 0, 11, 13, 15, 0, 17, 0, 19, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 0, 0, 0, 12, 14, 16, 0, 18, 0, 20, 0, 0, 0, 0].span(),
    split_indices: array![4, 1, 3, 7, 1, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![136891, -141278, 85867, 9007, -140938, 569, 5966, -1605, 7295, -7515, 695, -139119, -139119, 12822, 34509, -10927, 23036, -4569, 2796, 3728, -2541].span()
};
    let tree_99 = xgb_inference::Tree {
    base_weights: array![173, -1207, 9631, 1674, -15802, -2603, 8352, -6831, 6849, 2866, -22569, 6231, -6131, 331, -10540, 22005, -1049, -33841, 1032, -7083, 7011, 35671, -2868, 18933, -8183, -12826, -2539, 2252, -9195, 14095, -415, 10602, -3106, -4248, 5125].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 0, 13, 15, 0, 17, 0, 0, 19, 0, 21, 23, 25, 0, 27, 0, 29, 0, 31, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 0, 14, 16, 0, 18, 0, 0, 20, 0, 22, 24, 26, 0, 28, 0, 30, 0, 32, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![1, 0, 3, 6, 6, 3, 0, 6, 6, 0, 2, 0, 0, 7, 0, 2, 8, 0, 0, 8, 0, 5, 0, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![119188, 67011, 59117, -15236, -115460, -51401, 8352, -24571, 19949, 2866, 80427, 6231, -6131, 100740, -10540, 64849, -44002, 93989, 1032, 21888, 7011, 42017, -2868, 58587, 45506, -12826, -2539, 2252, -9195, 14095, -415, 10602, -3106, -4248, 5125].span()
};
    let num_trees: u32 = 100;
    let base_score: i32 = 53025;
    let opt_type: u8 = 1;
    let trees: Span<xgb_inference::Tree> = array![tree_0, tree_1, tree_2, tree_3, tree_4, tree_5, tree_6, tree_7, tree_8, tree_9, tree_10, tree_11, tree_12, tree_13, tree_14, tree_15, tree_16, tree_17, tree_18, tree_19, tree_20, tree_21, tree_22, tree_23, tree_24, tree_25, tree_26, tree_27, tree_28, tree_29, tree_30, tree_31, tree_32, tree_33, tree_34, tree_35, tree_36, tree_37, tree_38, tree_39, tree_40, tree_41, tree_42, tree_43, tree_44, tree_45, tree_46, tree_47, tree_48, tree_49, tree_50, tree_51, tree_52, tree_53, tree_54, tree_55, tree_56, tree_57, tree_58, tree_59, tree_60, tree_61, tree_62, tree_63, tree_64, tree_65, tree_66, tree_67, tree_68, tree_69, tree_70, tree_71, tree_72, tree_73, tree_74, tree_75, tree_76, tree_77, tree_78, tree_79, tree_80, tree_81, tree_82, tree_83, tree_84, tree_85, tree_86, tree_87, tree_88, tree_89, tree_90, tree_91, tree_92, tree_93, tree_94, tree_95, tree_96, tree_97, tree_98, tree_99].span();
    let mut result: i32 = xgb_inference::accumulate_scores_from_trees(num_trees, trees, input_vector, 0, 0);

    if opt_type == 1 {
        // Implement logic here
    } else {
        result = result + base_score;
    }

    return result;
}